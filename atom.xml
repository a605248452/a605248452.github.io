<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leezhiy Blog</title>
  
  <subtitle>我秃了，也变强了</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leezhiy.github.io/"/>
  <updated>2020-04-18T17:41:41.354Z</updated>
  <id>http://leezhiy.github.io/</id>
  
  <author>
    <name>Li Zhiyuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Next搭建个人博客 （其他样式美化）</title>
    <link href="http://leezhiy.github.io/2020/04/12/2020-04-12-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E5%85%B6%E4%BB%96%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/04/12/2020-04-12-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E5%85%B6%E4%BB%96%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96%EF%BC%89/</id>
    <published>2020-04-12T08:28:36.000Z</published>
    <updated>2020-04-18T17:41:41.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们将为博客添加一个网页音乐播放器，在本章，我们将进行最后的博客样式调整，让他变得更好看一些。</p><a id="more"></a><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><h3 id="实现效果图"><a href="#实现效果图" class="headerlink" title="实现效果图"></a>实现效果图</h3><p><img data-src="/images/mouse-heart.gif" alt="点击桃心"></p><h3 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h3><p>在网址输入如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;7u2ss1.com1.z0.glb.clouddn.com&#x2F;love.js</span><br></pre></td></tr></table></figure><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;love.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="点击爆炸效果"><a href="#点击爆炸效果" class="headerlink" title="点击爆炸效果"></a>点击爆炸效果</h2><p>创建 <code>Hexo/themes/next/source/js/fireworks.js</code> 文件，添加以下内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">180</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">25</span>,<span class="number">90</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">8</span>,<span class="number">16</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">900</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">40</span>,<span class="number">80</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">300</span>,<span class="number">400</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">900</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">180</span>)*<span class="built_in">Math</span>.PI/<span class="number">90</span>,a=anime.random(<span class="number">25</span>,<span class="number">90</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">8</span>,<span class="number">16</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">900</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">40</span>,<span class="number">80</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">300</span>,<span class="number">400</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">900</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>接着打开 <span class="label success">主题配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Fireworks</span></span><br><span class="line">fireworks: </span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><p>打开 <code>hexo/next/layout/_layout.swig</code>, 在<code>&lt;/body&gt;</code>上面写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks.enabled %&#125;</span><br><span class="line">   &lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt; </span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt; </span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h2><h3 id="实现效果图-1"><a href="#实现效果图-1" class="headerlink" title="实现效果图"></a>实现效果图</h3><p><img data-src="/images/post-end.png" alt="效果图"></p><h3 id="具体实现方法-1"><a href="#具体实现方法-1" class="headerlink" title="具体实现方法"></a>具体实现方法</h3><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;&#123;&#123;theme.passage_end_tag.content&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>接着打开 <code>\themes\next\layout\_macro\post.swig</code> 文件，在 <code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if not is_index and theme.passage_end_tag.enabled %&#125;</span><br><span class="line">  &#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>接着打开 <span class="label success">主题配置文件</span> ，在末尾添加：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br><span class="line">  content: ------------- 💖 🌞 本 文 结 束 😚 感 谢 您 的 阅 读 🌞 💖 -------------</span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h2 id="设置网站的图标-Favicon"><a href="#设置网站的图标-Favicon" class="headerlink" title="设置网站的图标 Favicon"></a>设置网站的图标 Favicon</h2><h3 id="实现效果图-2"><a href="#实现效果图-2" class="headerlink" title="实现效果图"></a>实现效果图</h3><p><img data-src="/images/favicon-success.png" alt="效果"></p><h3 id="具体方法实现"><a href="#具体方法实现" class="headerlink" title="具体方法实现"></a>具体方法实现</h3><p>在 <a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a> 中找一张合适的 ico 图标,或者去别的网站下载或者制作，并将图标名称改为 <code>favicon.ico</code>，然后把图标放在 <code>/themes/next/source/images</code> 里,接着打开 <span class="label success">主题配置文件</span> ，搜索关键字 <code>iocn</code>, 修改如下：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line"><span class="meta">  #</span><span class="bash">android_manifest: /images/manifest.json</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h2 id="背景添加动态线条效果"><a href="#背景添加动态线条效果" class="headerlink" title="背景添加动态线条效果"></a>背景添加动态线条效果</h2><p>打开 <code>next/layout/_layout.swig</code><br>在 <code>&lt;/body&gt;</code> 之前添加代码(注意不要放在 <code>&lt;/head&gt;</code> 的后面)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;canvas-nest.js&#x2F;1.0.0&#x2F;canvas-nest.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#96;</span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ,在末尾添加如下代码：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> background settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> add canvas-nest effect</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p>如果你感觉默认的线条太多的话可以修改 ``next/layout/_layout.swig`:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;</span><br><span class="line">color&#x3D;&quot;0,0,255&quot; opacity&#x3D;&#39;0.7&#39; zIndex&#x3D;&quot;-2&quot; count&#x3D;&quot;99&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;canvas-nest.js&#x2F;1.0.0&#x2F;canvas-nest.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><code>color:</code> 线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)<br><code>opacity:</code> 线条透明度（0~1）, 默认: <code>0.5</code><br><code>count:</code> 线条的总数量, 默认: <code>150</code><br><code>zIndex:</code> 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: <code>-1</code></p><h2 id="背景添加动态彩带效果"><a href="#背景添加动态彩带效果" class="headerlink" title="背景添加动态彩带效果"></a>背景添加动态彩带效果</h2><p>在 Hexo 文件夹下打开 git bash ，并输入：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> themes/next</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-ribbon <span class="built_in">source</span>/lib/canvas-ribbon</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>canvas_ribbon</code> 关键字，设置如下：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>需要使用 CDN 的话继续设置：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vendors:</span><br><span class="line">  ...</span><br><span class="line">  canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js</span><br></pre></td></tr></table></figure><h2 id="设置圆角"><a href="#设置圆角" class="headerlink" title="设置圆角"></a>设置圆角</h2><p>打开 <code>hexo\themes\next\source\css\_variables\Gemini.styl</code>, 修改变量：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$border-radius-inner     = 0.5rem;</span><br><span class="line">$border-radius           = 0.5rem;</span><br></pre></td></tr></table></figure><h2 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h2><p>分享一个非常好用的背景图网站 <a href="https://www.toptal.com/designers/subtlepatterns" target="_blank" rel="noopener">https://www.toptal.com/designers/subtlepatterns</a></p><p>找一个你心仪的背景图，下载保存到 <code>hexo\themes\next\images\</code> 下</p><p>打开 <code>hexo\themes\next\source\css\_variables\Gemini.styl</code>, 找到 <code>$body-bg-color</code>, 设置如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$body-bg-color           = url(/images/background.png);</span><br><span class="line"><span class="comment">// 如果你希望 暗黑模式 也使用这个背景就加上下面这一句</span></span><br><span class="line">$body-bg-color-dark      = url(/images/background.png);</span><br></pre></td></tr></table></figure><h2 id="设置目录背景图"><a href="#设置目录背景图" class="headerlink" title="设置目录背景图"></a>设置目录背景图</h2><p>找一个你心仪的背景图，下载保存到 <code>hexo\themes\next\images\</code> 下</p><p>打开 <code>hexo\themes\next\source\css\_variables\Gemini.styl</code>, 添加变量：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$header-inner-bg-color   = url(/images/site-brand-background.jpg);</span><br></pre></td></tr></table></figure><p>新建 <code>hexo\themes\next\source\css\_schemes\Gemini\_header.styl</code>, 输入：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-brand-container</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$header-inner-bg-color</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.brand</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-logo-image</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>hexo\themes\next\source\css\_schemes\Gemini\index.styl</code>, 搜索 <code>@import &#39;../Pisces/_header&#39;;</code>, 修改为</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">'../Gemini/_header'</span>;</span><br></pre></td></tr></table></figure><h2 id="设置回到顶部彩带"><a href="#设置回到顶部彩带" class="headerlink" title="设置回到顶部彩带"></a>设置回到顶部彩带</h2><p>打开 <code>hexo\themes\next\source\css\_variables\Gemini.styl</code>, 添加变量：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$b2c-bg-color            = linear-gradient(90deg,#6dba82 0,#07b39b 15%,#1098ad 30%,#5073b8 44%,#a166ab 58%,#ef4e7b 72%,#f37055 86%,#f79533 100%);</span><br><span class="line">$b2t-opacity             = .8;</span><br><span class="line">$sidebar-color           = black</span><br></pre></td></tr></table></figure><p>新建 <code>hexo\themes\next\source\css\_schemes\Gemini\_sidebar.styl</code>, 输入：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: var(--body-bg-color);</span><br><span class="line">  <span class="attribute">box-shadow</span>: none;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$sidebar-desktop</span>;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: var(--content-bg-color);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$box-shadow</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$sidebar-color</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$sidebar-desktop</span>;</span><br><span class="line"></span><br><span class="line">  if (hexo-config('motion.enable') &amp;&amp; hexo-config('motion.transition.sidebar')) &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.affix</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="variable">$sidebar-offset</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.affix-bottom</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-state-item</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-button</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> dotted <span class="variable">$grey-light</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> dotted <span class="variable">$grey-light</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$orange</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">background</span>: none;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">color</span>: darken(<span class="variable">$orange</span>, <span class="number">20%</span>);</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.fa</span>, <span class="selector-class">.fab</span>, <span class="selector-class">.far</span>, <span class="selector-class">.fas</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: darken(<span class="variable">$orange</span>, <span class="number">20%</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.links-of-author</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.links-of-author-item</span> &#123;</span><br><span class="line">  sidebar-inline-links-item();</span><br><span class="line"></span><br><span class="line">  if (!hexo-config('social_icons.icons_only')) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">background</span>: var(--menu-item-bg-color);</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.fa</span>, <span class="selector-class">.fab</span>, <span class="selector-class">.far</span>, <span class="selector-class">.fas</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">2px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.links-of-blogroll-item</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  if (hexo-config('links_settings.layout') == 'inline') &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    sidebar-inline-links-item();</span><br><span class="line"></span><br><span class="line">    if (!hexo-config('social_icons.icons_only')) &#123;</span><br><span class="line">      <span class="attribute">width</span>: unset;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (hexo-config('back2top.sidebar')) &#123;</span><br><span class="line">  <span class="comment">// Only when back2top.sidebar is true, apply the following styles</span></span><br><span class="line">  <span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$b2c-bg-color</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">8px</span> - <span class="variable">$sidebar-offset</span> -<span class="number">10px</span> -<span class="number">18px</span>;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">16px</span>;</span><br><span class="line">      <span class="attribute">border-bottom-left-radius</span>: <span class="number">0.5rem</span>;</span><br><span class="line">      <span class="attribute">border-bottom-right-radius</span>: <span class="number">0.5rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>hexo\themes\next\source\css\_schemes\Gemini\index.styl</code>, 搜索 <code>@import &#39;../Pisces/_sidebar&#39;;</code>, 修改为</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">'../Gemini/_sidebar'</span>;</span><br></pre></td></tr></table></figure><h2 id="设置分页样式"><a href="#设置分页样式" class="headerlink" title="设置分页样式"></a>设置分页样式</h2><p>打开 <code>hexo\themes\next\source\css\_schemes\Gemini\index.styl</code>, 搜索 <code>// Pagination.</code>, 修改为</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Pagination.</span></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: var(--content-bg-color);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: initial;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev</span>, <span class="selector-class">.next</span>, <span class="selector-class">.page-number</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: var(--content-bg-color);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: initial;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: initial;</span><br><span class="line">    <span class="attribute">top</span>: initial;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="variable">$border-radius</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: initial;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$box-shadow</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="variable">$sidebar-offset</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置-Valine-评论样式"><a href="#设置-Valine-评论样式" class="headerlink" title="设置 Valine 评论样式"></a>设置 Valine 评论样式</h2><p>新建 <code>hexo\themes\next\source\css\_schemes\Gemini\valine.styl</code>, 输入：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.3rem</span> <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8e8cd8</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff7242</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">"/images/comment_bg.png"</span>) <span class="number">100%</span> <span class="number">100%</span> no-repeat; #背景图</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-class">.info</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-class">.vimg</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-class">.vimg</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: rotate(<span class="number">540deg</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: rotate(<span class="number">540deg</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: rotate(<span class="number">540deg</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: rotate(<span class="number">540deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">540deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-class">.vat</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#8e8cd8</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#8e8cd8</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7125rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#valine-comments</span> <span class="selector-class">.vat</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8e8cd8</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>hexo\themes\next\source\css\_schemes\Gemini\index.styl</code>, 引入刚才新加的样式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">'../Gemini/valine.styl'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们将为博客添加一个网页音乐播放器，在本章，我们将进行最后的博客样式调整，让他变得更好看一些。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客 （添加网页音乐播放器）</title>
    <link href="http://leezhiy.github.io/2020/04/11/2020-04-11-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/04/11/2020-04-11-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%89/</id>
    <published>2020-04-11T14:46:00.000Z</published>
    <updated>2020-04-18T14:41:32.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们为博客添加了一个萌萌的 Live2D 看板娘，在本章，我们将为博客添加一个网页音乐播放器。</p><a id="more"></a><p>给博客插入音乐的办法有很多，但效果相对理想的方案有两种：</p><ul><li>使用音乐平台提供的插件</li><li>使用 <a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a> 插件</li></ul><h2 id="使用音乐平台提供的插件"><a href="#使用音乐平台提供的插件" class="headerlink" title="使用音乐平台提供的插件"></a>使用音乐平台提供的插件</h2><p>以网易云为例，网页端点击生成 <a href="https://music.163.com/#/outchain/0/2205641361/m/use/html" target="_blank" rel="noopener">外链播放器</a> 即可生成外链代码。</p><p>可以在自己博客页面中嵌入插件:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">frameborder</span>=<span class="string">"no"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">border</span>=<span class="string">"0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">marginwidth</span>=<span class="string">"0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">marginheight</span>=<span class="string">"0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">330</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">450</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=0&amp;id=2205641361&amp;auto=1&amp;height=430"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><p><img data-src="/images/music-163.png" alt="网易云音乐播放器"></p><p>但是有相对非常多的音乐由于版权保护，没办法生成外链：</p><p><img data-src="/images/music-163-fail.png" alt="生成失败"></p><h2 id="使用-hexo-tag-aplayer-插件"><a href="#使用-hexo-tag-aplayer-插件" class="headerlink" title="使用 hexo-tag-aplayer 插件"></a>使用 hexo-tag-aplayer 插件</h2><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a> 就是将 <a href="https://github.com/DIYgod/APlayer" target="_blank" rel="noopener">APlayer</a> 内嵌入博客页面的 Hexo 插件。</p><p>安装执行：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save hexo-tag-aplayer</span></span><br></pre></td></tr></table></figure><p>原先 <code>hexo-tag-aplayer</code> 不支持 <code>MetingJS</code>，使得需要图片url，音乐url等等参数，操作起来都很麻烦，需要去音乐网站扒音乐播放链接或者下载下来存储在七牛云或本地，要了解具体参数和使用可以查看其<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">中文文档</a>了解。</p><h3 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h3><p><a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a> 是基于 <a href="https://github.com/metowolf/Meting" target="_blank" rel="noopener">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true                                  # Meting support, default: false</span><br></pre></td></tr></table></figure><p>接着就可以 在<strong>文章</strong>中使用 MetingJS 播放器了，例如打开网易云音乐网站找一个歌单，例如： <a href="https://music.163.com/#/playlist?id=3136952023，" target="_blank" rel="noopener">https://music.163.com/#/playlist?id=3136952023，</a> 这个歌单的id就是3136952023，按下面格式即可使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;3136952023&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="全局音乐插件"><a href="#全局音乐插件" class="headerlink" title="全局音乐插件"></a>全局音乐插件</h3><p>如果想在非 Post 页面使用插件功能，直接使用上面的方法修改 layout 的话会报以下错误</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Unexpected tag "meting"</span><br></pre></td></tr></table></figure><p>所以我们只能使用另一种办法，创建 <code>Hexo/source/_data/APlayer.swig</code> 文件，添加以下内容。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if aplayer.enabled %&#125;</span><br><span class="line">  &lt;!-- require APlayer --&gt;</span><br><span class="line">  &lt;link rel="stylesheet" href="&#123;&#123;aplayer.cdn.css&#125;&#125;"&gt;</span><br><span class="line">  &lt;script src="&#123;&#123;aplayer.cdn.js&#125;&#125;"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- require MetingJS --&gt;</span><br><span class="line">  &lt;script src="&#123;&#123;aplayer.cdn.meting&#125;&#125;"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;meting-js</span><br><span class="line">    server="&#123;&#123;aplayer.server&#125;&#125;"</span><br><span class="line">    type="&#123;&#123;aplayer.type&#125;&#125;"</span><br><span class="line">    fixed="&#123;&#123;aplayer.fixed&#125;&#125;"</span><br><span class="line">    id="&#123;&#123;aplayer.id&#125;&#125;"</span><br><span class="line">    auto="&#123;&#123;aplayer.auto&#125;&#125;"</span><br><span class="line">    mini="&#123;&#123;aplayer.mini&#125;&#125;"</span><br><span class="line">    autoplay="&#123;&#123;aplayer.autoplay&#125;&#125;"</span><br><span class="line">    theme="&#123;&#123;aplayer.theme&#125;&#125;"</span><br><span class="line">    loop="&#123;&#123;aplayer.loop&#125;&#125;"</span><br><span class="line">    order="&#123;&#123;aplayer.order&#125;&#125;"</span><br><span class="line">    preload="&#123;&#123;aplayer.preload&#125;&#125;"</span><br><span class="line">    volume="&#123;&#123;aplayer.volume&#125;&#125;"</span><br><span class="line">    mutex="&#123;&#123;aplayer.mutex&#125;&#125;"</span><br><span class="line">    list-folded="&#123;&#123;aplayer.listfolded&#125;&#125;"</span><br><span class="line">    list-max-height="&#123;&#123;aplayer.listmaxheight&#125;&#125;"</span><br><span class="line">    storage-name="&#123;&#123;aplayer.storagename&#125;&#125;" &gt;</span><br><span class="line">  &lt;/meting-js&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>接着打开 <span class="label success">主题配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> APlayer settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> enabled:  <span class="literal">true</span>/<span class="literal">false</span>   开启/关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id: song id / playlist id / album id / search keyword   歌曲ID、歌单ID、关键字</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> server: netease, tencent, kugou, xiami, baidu     音乐平台</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">type</span>: song, playlist, album, search, artist  类型</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> auto: music link, support: netease, tencent, xiami</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fixed: <span class="literal">true</span>/<span class="literal">false</span>   吸底模式</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mini: <span class="literal">true</span>/<span class="literal">false</span>   迷你模式</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> autoplay: <span class="literal">true</span>/<span class="literal">false</span>   自动播放</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> theme: <span class="comment">#eeeeee 主题颜色</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> loop: values: <span class="string">'all'</span>, <span class="string">'one'</span>, <span class="string">'none'</span> 循环播放</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> order: values: <span class="string">'list'</span>, <span class="string">'random'</span> 是否随机播放</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> preload: values: <span class="string">'none'</span>, <span class="string">'metadata'</span>, <span class="string">'auto'</span> 预载入</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> volume:0.7默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mutex: <span class="literal">true</span>/<span class="literal">false</span>互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> list-folded:<span class="literal">true</span>/<span class="literal">false</span>列表默认折叠</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> list-max-height:340px列表最大高度</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> storage-name:metingjs存储播放器设置的 localStorage key</span></span><br><span class="line">aplayer:</span><br><span class="line">  enabled: true</span><br><span class="line">  id: 3099335800</span><br><span class="line">  server: netease</span><br><span class="line">  type: playlist</span><br><span class="line">  auto:</span><br><span class="line">  fixed: true</span><br><span class="line">  mini: true</span><br><span class="line">  autoplay: true</span><br><span class="line">  theme: #607d8b</span><br><span class="line">  loop: 'all'</span><br><span class="line">  order: 'random'</span><br><span class="line">  preload: 'auto'</span><br><span class="line">  volume: 0.7</span><br><span class="line">  mutex: true</span><br><span class="line">  listfolded: true</span><br><span class="line">  listmaxheight: 340px</span><br><span class="line">  storagename: metingjs</span><br><span class="line">  cdn:</span><br><span class="line">    css: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</span><br><span class="line">    js: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</span><br><span class="line">    meting: https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js</span><br></pre></td></tr></table></figure><p>打开 <code>hexo/scripts/plugins.js</code>, 在 head 注入点<a href="https://theme-next.org/docs/advanced-settings" target="_blank" rel="noopener">注入</a> APlayer</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">'theme_inject'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">injects</span>) </span>&#123;</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  <span class="comment">// 引入 APlayer</span></span><br><span class="line">  injects.head.file(<span class="string">'aplayer'</span>, <span class="string">'source/_data/APlayer.swig'</span>, &#123;<span class="attr">aplayer</span>: hexo.theme.config.aplayer&#125;);</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>最后是 MetingJs 的参数详情：</p><table><thead><tr><th align="left">参数名</th><th align="left">默认</th><th align="left">description</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">require</td><td align="left">歌曲ID /播放列表ID /专辑ID /搜索关键字</td></tr><tr><td align="left">server</td><td align="left">require</td><td align="left">音乐平台,可选值： ‘netease’，’tencent’，’kugou’，’xiami’，’baidu’</td></tr><tr><td align="left">type</td><td align="left">require</td><td align="left">类型，可选值：’song’, ‘playlist’, ‘album’, ‘search’, ‘artist’</td></tr><tr><td align="left">auto</td><td align="left">options</td><td align="left">音乐链接，支持： ‘netease’, ‘tencent’, ‘xiami’</td></tr><tr><td align="left">fixed</td><td align="left">false</td><td align="left">开启吸底模式, <a href="https://aplayer.js.org/#/home?id=fixed-mode" target="_blank" rel="noopener">详情</a></td></tr><tr><td align="left">mini</td><td align="left">false</td><td align="left">开启迷你模式, <a href="https://aplayer.js.org/#/home?id=mini-mode" target="_blank" rel="noopener">详情</a></td></tr><tr><td align="left">autoplay</td><td align="left">false</td><td align="left">音频自动播放</td></tr><tr><td align="left">theme</td><td align="left">#2980b9</td><td align="left">主题色</td></tr><tr><td align="left">loop</td><td align="left">all</td><td align="left">音频循环播放, 可选值: ‘all’, ‘one’, ‘none’</td></tr><tr><td align="left">order</td><td align="left">list</td><td align="left">音频循环顺序, 可选值: ‘list’, ‘random’</td></tr><tr><td align="left">preload</td><td align="left">auto</td><td align="left">预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td align="left">volume</td><td align="left">0.7</td><td align="left">默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td align="left">mutex</td><td align="left">true</td><td align="left">互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td></tr><tr><td align="left">lrc-type</td><td align="left">0</td><td align="left"><a href="https://aplayer.js.org/#/home?id=lrc" target="_blank" rel="noopener">详情</a></td></tr><tr><td align="left">list-folded</td><td align="left">false</td><td align="left">列表默认折叠</td></tr><tr><td align="left">list-max-height</td><td align="left">340px</td><td align="left">列表最大高度</td></tr><tr><td align="left">storage-name</td><td align="left">metingjs</td><td align="left">存储播放器设置的 localStorage key</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们为博客添加了一个萌萌的 Live2D 看板娘，在本章，我们将为博客添加一个网页音乐播放器。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客 （肥宅的快乐）</title>
    <link href="http://leezhiy.github.io/2020/04/06/2020-04-06-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E8%82%A5%E5%AE%85%E7%9A%84%E5%BF%AB%E4%B9%90%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/04/06/2020-04-06-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E8%82%A5%E5%AE%85%E7%9A%84%E5%BF%AB%E4%B9%90%EF%BC%89/</id>
    <published>2020-04-06T08:26:00.000Z</published>
    <updated>2020-04-18T14:22:56.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们已经设置了多个网站统计分析，在本章，我们将为博客添加一个萌萌的 Live2D 看板娘。</p><a id="more"></a><p>Live2d是这几年比较火热的一门技术，是应用于游戏中的一种绘图渲染，近几年广泛应用于手游中（作为看板）。</p><p>很意外的，它也很适用于博客中。</p><p>虽然本身的功能不大，但是作为美化来说还是十分可爱的。</p><h2 id="简单版"><a href="#简单版" class="headerlink" title="简单版"></a>简单版</h2><p>如果对于看板娘的要求不是特别高，只是需要放在那里卖个萌就行，建议用简易版的就ok。比较常见于各个博客的看板娘类型。</p><h3 id="安装插件："><a href="#安装插件：" class="headerlink" title="安装插件："></a>安装插件：</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure><h3 id="安装模型"><a href="#安装模型" class="headerlink" title="安装模型:"></a>安装模型:</h3><p>现有的 Live2D 看板娘模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru&#x2F;01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru&#x2F;02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu # 本博客的看板娘</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p>选择一个你喜欢的，运行下面命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install packagename</span></span><br></pre></td></tr></table></figure><p>同时在 <span class="label primary">站点配置文件</span> 中添加：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Live2D</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span></span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">enable</span>: <span class="literal">false</span></span></span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line"><span class="meta">  #</span><span class="bash"> scriptFrom: jsdelivr <span class="comment"># jsdelivr CDN</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> scriptFrom: unpkg <span class="comment"># unpkg CDN</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js <span class="comment"># 你的自定义 url</span></span></span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-koharu # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br><span class="line">    # use: ./wives/wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 200 # 看板娘宽度</span><br><span class="line">    height: 450 # 看板娘高度</span><br><span class="line">    hOffset: 10 # 看板娘向左/右偏移量</span><br><span class="line">    vOffset: 150 # 看板娘向上偏移量</span><br><span class="line">  mobile:</span><br><span class="line">    show: false # 手机中是否展示</span><br></pre></td></tr></table></figure><h2 id="高级版"><a href="#高级版" class="headerlink" title="高级版"></a>高级版</h2><p>高级版对比初级版更多了换装、换人、飞机大战小游戏等功能，但由于只能置于页面最下方，会挡住很多按钮，故本博客没有用。</p><h3 id="使用-CDN"><a href="#使用-CDN" class="headerlink" title="使用 CDN"></a>使用 CDN</h3><p>高级版看板娘免安装可以直接使用 CDN，我们依然使用 Hexo 的注入功能来管理插件</p><p>首先，打开 <span class="label success">主题配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> live2d 看板娘</span></span><br><span class="line">live2d:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><p>第二步，打开 <code>hexo/scripts/plugins.js</code>，在 head 注入点<a href="https://theme-next.org/docs/advanced-settings" target="_blank" rel="noopener">注入</a> js 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">'theme_inject'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">injects</span>) </span>&#123;</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (hexo.theme.config.live2d.enabled) &#123;</span><br><span class="line">    injects.head.raw(<span class="string">'live2d.js'</span>, <span class="string">'&lt;script src="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js"&gt;&lt;/script&gt;'</span>, &#123;&#125;, &#123;<span class="attr">cache</span>: <span class="literal">true</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="下载到本地"><a href="#下载到本地" class="headerlink" title="下载到本地"></a>下载到本地</h3><p>当然你也可以下载到本地来使用，在 Hexo 根目录输入如下命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/stevenjoezhang/live2d-widget.git <span class="built_in">source</span>/js/live2d/</span></span><br></pre></td></tr></table></figure><p>接下来就和上面使用 CDN 一样了，只不过要注意注入时 <code>script</code> 标签的 <code>src</code> 属性要换成 <code>/js/live2d/autoload.js</code></p><p>如果想要定制对话框以及样式的话可以改下面这些文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo&#x2F;source&#x2F;js&#x2F;live2d&#x2F;waifu-tips.js 包含了按钮和对话框的逻辑；</span><br><span class="line">hexo&#x2F;source&#x2F;js&#x2F;live2d&#x2F;waifu-tips.json 中定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</span><br><span class="line">hexo&#x2F;source&#x2F;js&#x2F;live2d&#x2F;waifu.css 是看板娘的样式表。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们已经设置了多个网站统计分析，在本章，我们将为博客添加一个萌萌的 Live2D 看板娘。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客 （添加网站统计分析功能）</title>
    <link href="http://leezhiy.github.io/2020/03/28/2020-03-28-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E6%B7%BB%E5%8A%A0%E5%90%84%E7%A7%8D%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/28/2020-03-28-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E6%B7%BB%E5%8A%A0%E5%90%84%E7%A7%8D%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD%EF%BC%89/</id>
    <published>2020-03-28T08:25:13.000Z</published>
    <updated>2020-04-18T10:06:44.714Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们已经集成 DaoVoice 在线联系功能，本章，我们将设置网站统计分析</p><a id="more"></a><h2 id="添加网站统计"><a href="#添加网站统计" class="headerlink" title="添加网站统计"></a>添加网站统计</h2><h3 id="Google-分析"><a href="#Google-分析" class="headerlink" title="Google 分析"></a>Google 分析</h3><h4 id="新建-Google-分析-账号"><a href="#新建-Google-分析-账号" class="headerlink" title="新建 Google 分析 账号"></a>新建 Google 分析 账号</h4><p>首先进入 <a href="https://analytics.google.com/analytics" target="_blank" rel="noopener">Google 分析</a> 创建账号,如下</p><p><img data-src="/images/analytics-google.png" alt="谷歌分析"></p><p>创建分析应用</p><p><img data-src="/images/analytics-google-create-app.png" alt="创建应用"></p><p><img data-src="/images/analytics-google-create-app2.png" alt="创建应用2"></p><p>创建完成后，我们依次点击页面左下角 <strong>设置 -&gt; 跟踪信息 -&gt; 跟踪代码</strong> 获取跟踪 ID</p><p><img data-src="/images/analytics-google-create-app-success.png" alt="创建完成"></p><h4 id="配置-NexT-主题"><a href="#配置-NexT-主题" class="headerlink" title="配置 NexT 主题"></a>配置 NexT 主题</h4><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>google_analytics</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Google Analytics</span></span><br><span class="line">google_analytics:</span><br><span class="line">  tracking_id: # 你的跟踪代码</span><br><span class="line"><span class="meta">  #</span><span class="bash"> By default, NexT will load an external gtag.js script on your site.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> If you only need the pageview feature, <span class="built_in">set</span> the following option to <span class="literal">true</span> to get a better performance.</span></span><br><span class="line">  only_pageview: false</span><br></pre></td></tr></table></figure><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><h4 id="获取统计代码"><a href="#获取统计代码" class="headerlink" title="获取统计代码"></a>获取统计代码</h4><p>首先我们登录 <a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noopener">百度统计</a></p><p>添加网站</p><p><img data-src="/images/analytics-baidu.png" alt="百度统计添加网站"></p><p>添加完成后，点击获取代码</p><p><img data-src="/images/analytics-baidu-get-code.png" alt="获取代码"></p><p>红框部分就是我们需要的统计代码</p><p><img data-src="/images/analytics-baidu-get-code-success.png" alt="统计代码"></p><h4 id="配置-NexT-主题-1"><a href="#配置-NexT-主题-1" class="headerlink" title="配置 NexT 主题"></a>配置 NexT 主题</h4><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>baidu_analytics</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Baidu Analytics</span></span><br><span class="line">baidu_analytics: # 你的 app_id</span><br></pre></td></tr></table></figure><h3 id="不算子统计"><a href="#不算子统计" class="headerlink" title="不算子统计"></a>不算子统计</h3><p><a href="http://ibruce.info/2015/04/04/busuanzi" target="_blank" rel="noopener">不算子官网</a></p><p>NexT 中已经为我们集成了不算子统计的代码，我们只需在NexT配置文件中开启即可</p><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>busuanzi_count</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: false</span><br><span class="line">  post_views_icon: fa fa-eye</span><br></pre></td></tr></table></figure><h3 id="CNZZ-友盟统计"><a href="#CNZZ-友盟统计" class="headerlink" title="CNZZ 友盟统计"></a>CNZZ 友盟统计</h3><h4 id="获取统计代码-1"><a href="#获取统计代码-1" class="headerlink" title="获取统计代码"></a>获取统计代码</h4><p>首先我们登录 <a href="https://passport.umeng.com/login" target="_blank" rel="noopener">友盟+</a></p><p>点击 <strong>添加 Web</strong> 添加一个网站</p><p><img data-src="/images/analytics-cnzz-add-site.png" alt="添加网站"></p><p><img data-src="/images/analytics-cnzz-add-site2.png" alt="添加网站"></p><p>添加完成后复制红框中的值</p><p><img data-src="/images/analytics-cnzz-get-code.png" alt="获取站点ID"></p><h4 id="配置-NexT-主题-2"><a href="#配置-NexT-主题-2" class="headerlink" title="配置 NexT 主题"></a>配置 NexT 主题</h4><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>cnzz_siteid</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CNZZ count</span></span><br><span class="line">cnzz_siteid: # 你的站点id</span><br></pre></td></tr></table></figure><h2 id="添加字数统计和预计阅读时长"><a href="#添加字数统计和预计阅读时长" class="headerlink" title="添加字数统计和预计阅读时长"></a>添加字数统计和预计阅读时长</h2><p>在站点根目录下打开 git bash ，输入以下命令安装 <code>hexo-symbols-count-time</code> 插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-symbols-count-time --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>symbols_count_time</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Post wordcount display settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: "mins."</span><br></pre></td></tr></table></figure><h2 id="添加文章阅读量统计"><a href="#添加文章阅读量统计" class="headerlink" title="添加文章阅读量统计"></a>添加文章阅读量统计</h2><p><strong>注：文章阅读量统计可以按照自己喜好选择其中一个便可</strong></p><h3 id="Firebase-文章阅读量统计"><a href="#Firebase-文章阅读量统计" class="headerlink" title="Firebase 文章阅读量统计"></a>Firebase 文章阅读量统计</h3><h4 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h4><p>Firebase 是基于 Google 账号的，所以可以直接用 Google 账号，我们先<a href="https://console.firebase.google.com/u/0/" target="_blank" rel="noopener">创建一个项目</a></p><p>创建完成后点击下图所示位置获取apiKey和projectId</p><p><img data-src="/images/analytics-firebase-index.png" alt="首页"></p><p>下图红框圈中的地方就是你的apiKey和projectId<br><img data-src="/images/analytics-firebase-get-code.png" alt="获取参数"></p><h4 id="配置-NexT-主题-3"><a href="#配置-NexT-主题-3" class="headerlink" title="配置 NexT 主题"></a>配置 NexT 主题</h4><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>firestore</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Another tool to show number of visitors to each article.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class="line">firestore:</span><br><span class="line">  enable: true</span><br><span class="line">  collection: articles # Required, a string collection name to access firestore database</span><br><span class="line">  apiKey: # 你的 apiKey</span><br><span class="line">  projectId: # 你的 projectId</span><br></pre></td></tr></table></figure><h3 id="Leancloud"><a href="#Leancloud" class="headerlink" title="Leancloud"></a>Leancloud</h3><p><strong>如果是文章评论选择使用 Valine 插件的用户，可以直接把 <code>valine.visitor</code> 这个参数设置为 <code>true</code> 即可</strong></p><p>注册 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 账号，注册完成后，我们找到创建应用</p><p><img data-src="/images/valine-create-app.png" alt="创建应用"></p><p>在这里填写你的应用名称,名称可以自己定义，然后下面选择 <strong>开发版</strong> 点击 <strong>创建</strong>。</p><p><img data-src="/images/valine-app.png" alt="应用"></p><p>然后点击应用进入设置</p><p>在设置页，我们首先点击存储，查看是否有 <strong>Counter</strong> 表，没有则创建，权限设为无限制。</p><p><img data-src="/images/valine-app-create-class.png" alt="添加表"></p><p>然后点击设置 &gt; 安全中心 ,将除了数据存储的服务全部关闭。</p><p><img data-src="/images/valine-app-close-service.png" alt="关闭其他服务"></p><p>最后点击 <strong>应用 Keys</strong> 取得我们 <strong>AppKey</strong> 和 <strong>App id</strong></p><h4 id="配置-NexT-主题-4"><a href="#配置-NexT-主题-4" class="headerlink" title="配置 NexT 主题"></a>配置 NexT 主题</h4><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>leancloud_visitors</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Show number of visitors of each article.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can visit https://leancloud.cn to get AppID and AppKey.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> AppID and AppKey are recommended to be the same as valine<span class="string">'s for counter compatibility.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Do not <span class="built_in">enable</span> both `valine.visitor` and `leancloud_visitors`.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: # 获取的 App id</span><br><span class="line">  app_key: # 获取的 AppKey</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Required <span class="keyword">for</span> apps from CN region</span></span><br><span class="line">  server_url: # &lt;your server url&gt;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> If you don<span class="string">'t care about security in leancloud counter and just want to use it directly</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> (without hexo-leancloud-counter-security plugin), <span class="built_in">set</span> `security` to `<span class="literal">false</span>`.</span></span><br><span class="line">  security: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们已经集成 DaoVoice 在线联系功能，本章，我们将设置网站统计分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客 （集成DaoVoice在线联系功能）</title>
    <link href="http://leezhiy.github.io/2020/03/21/2020-03-21-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E9%9B%86%E6%88%90DaoVoice%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB%E5%8A%9F%E8%83%BD%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/21/2020-03-21-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E9%9B%86%E6%88%90DaoVoice%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB%E5%8A%9F%E8%83%BD%EF%BC%89/</id>
    <published>2020-03-21T15:24:24.000Z</published>
    <updated>2020-04-18T14:22:56.276Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们已经集成了 Valine 文章评论功能，在本章，我们将集成 DaoVoice 在线联系功能。</p><a id="more"></a><h2 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h2><p><img data-src="/images/daovoice.gif" alt=""></p><p>看着还不错吧，可以在线留言，作者会收到邮件，如果绑定了微信，作者还会收到微信通知。</p><p>下面就开始设置吧。</p><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>首先需要在 DaoVoice 注册个账号，<a href="http://dashboard.daovoice.io/get-started?invite_code=4e6b4c7f" target="_blank" rel="noopener">点击注册</a></p><p>注册成功后，进入后台控制台，进入到 应用设置–&gt;安装到网站 页面，可以得到一个 app_id：</p><p><img data-src="/images/daovoice-get-appid.png" alt="获取APPID"></p><h2 id="利用-NexT-主题的-Injects-功能管理-DaoVoice-插件"><a href="#利用-NexT-主题的-Injects-功能管理-DaoVoice-插件" class="headerlink" title="利用 NexT 主题的 Injects 功能管理 DaoVoice 插件"></a>利用 NexT 主题的 Injects 功能管理 DaoVoice 插件</h2><p>在 NexT 使用过程中，我们免不了要安装一些 NexT 暂时未集成的插件，但我们又不想修改主题的源码，这时就需要使用 Next 的 <code>theme-inject</code> 功能，它通过注入代码的方式提供多个注入点实现定制内容。 Injects 具体的定义见 <a href="https://theme-next.org/docs/advanced-settings" target="_blank" rel="noopener">NexT文档</a></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>首先，打开 <span class="label success">主题配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> DaoVoice</span></span><br><span class="line">daovoice:</span><br><span class="line">  enabled: true</span><br><span class="line">  app_id: # 输入你自己的 app_id</span><br></pre></td></tr></table></figure><h3 id="注入布局"><a href="#注入布局" class="headerlink" title="注入布局"></a>注入布局</h3><p>第二步，我们在 Hexo 的 <code>scripts</code> 创建一个js文件 plugins.js（用来管理需要修改代码的第三方插件），添加以下内容。只要是这里面的脚本，Hexo运行时会执行它。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">'theme_inject'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">injects</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// hexo.theme.config.daovoice 就是上面配置的值，我们将配置参数传递给 daovoice.swig</span></span><br><span class="line">    injects.head.file(<span class="string">'daovoice'</span>, <span class="string">'source/_data/DaoVoice.swig'</span>, &#123;<span class="attr">daovoice</span>: hexo.theme.config.daovoice&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>最后，我们创建 <code>Hexo/source/_data/DaoVoice.swig</code> 文件，添加以下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if daovoice.enabled %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&#39;init&#39;, &#123;</span><br><span class="line">    app_id: &#39;&#123;&#123;daovoice.app_id&#125;&#125;&#39;,   &#x2F;&#x2F; 必填，您的 APP 标识</span><br><span class="line">  &#125;);</span><br><span class="line">  daovoice(&#39;update&#39;);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>运行 <code>hexo s</code> ,发现右下角已经出现如图下所示图标，DaoVoice已经接入成功。</p><p><img data-src="/images/daovoice-logo.png" alt="接入成功"></p><h2 id="安装-hexo-cake-moon-menu-插件，并添加按钮接管-DaoVoice"><a href="#安装-hexo-cake-moon-menu-插件，并添加按钮接管-DaoVoice" class="headerlink" title="安装 hexo-cake-moon-menu 插件，并添加按钮接管 DaoVoice"></a>安装 hexo-cake-moon-menu 插件，并添加按钮接管 DaoVoice</h2><h3 id="安装-hexo-cake-moon-menu-插件"><a href="#安装-hexo-cake-moon-menu-插件" class="headerlink" title="安装 hexo-cake-moon-menu 插件"></a>安装 hexo-cake-moon-menu 插件</h3><p>在 Hexo 目录打开 git bash 并输入命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cake-moon-menu --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label primary">站点配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">moon_menu:</span><br><span class="line">  back2top:</span><br><span class="line">    enable: ture</span><br><span class="line">    icon: fa fa-chevron-up</span><br><span class="line">    func: back2top</span><br><span class="line">    order: -1</span><br><span class="line">  back2bottom:</span><br><span class="line">    enable: true</span><br><span class="line">    icon: fa fa-chevron-down</span><br><span class="line">    func: back2bottom</span><br><span class="line">    order: -2</span><br></pre></td></tr></table></figure><p>添加完成后运行 <code>hexo s</code> ,发现插件和 DaoVoice 重叠了，如下图所示:</p><p><img data-src="/images/daovoice-moon-menu.png" alt="插件重叠"></p><p>我们可以打开 DaoVoice 的后台，自定义 DaoVoice 的样式,如下图所示：</p><p><img data-src="/images/daovoice-style.png" alt="设置样式"></p><p>点击保存后，直接刷新页面，如下图所示</p><p><img data-src="/images/daovoice-black.png" alt="设置完成"></p><h3 id="添加-moon-menu-聊天按钮"><a href="#添加-moon-menu-聊天按钮" class="headerlink" title="添加 moon_menu 聊天按钮"></a>添加 moon_menu 聊天按钮</h3><p>修改之前配置的 <span class="label primary">站点配置文件</span>，修改如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">moon_menu:</span><br><span class="line">  chat: # 新增按钮</span><br><span class="line">    icon: fa fa-comments</span><br><span class="line">    func: openDaoCloud # 要实现的JS方法名 ，接管 DaoVoice</span><br><span class="line">  back2top:</span><br><span class="line">    enable: true</span><br><span class="line">    icon: fa fa-chevron-up</span><br><span class="line">    func: back2top</span><br><span class="line">    order: -1</span><br><span class="line">  back2bottom:</span><br><span class="line">    enable: true</span><br><span class="line">    icon: fa fa-chevron-down</span><br><span class="line">    func: back2bottom</span><br><span class="line">    order: -2</span><br></pre></td></tr></table></figure><h3 id="隐藏-DaoVoice-按钮并接管-DaoVoice"><a href="#隐藏-DaoVoice-按钮并接管-DaoVoice" class="headerlink" title="隐藏 DaoVoice 按钮并接管 DaoVoice"></a>隐藏 DaoVoice 按钮并接管 DaoVoice</h3><p> <a href="http://guide.daocloud.io/daovoice/javascript-api-5869833.html" target="_blank" rel="noopener">DaoVoice Javascript Api</a> </p><p>打开之前新建的 <code>Hexo/source/_data/daovoice.swig</code> 文件，修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if daovoice.enabled %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]&#x3D;r;i[r]&#x3D;i[r]||function()&#123;(i[r].q&#x3D;i[r].q||[]).push(arguments)&#125;,i[r].l&#x3D;1*new Date();a&#x3D;s.createElement(o),m&#x3D;s.getElementsByTagName(o)[0];a.async&#x3D;1;a.src&#x3D;g;a.charset&#x3D;&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#39;https:&#39; &#x3D;&#x3D; document.location.protocol ? &#39;https:&#39; : &#39;http:&#39;) + &quot;&#x2F;&#x2F;widget.daovoice.io&#x2F;widget&#x2F;0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&#39;init&#39;, &#123;</span><br><span class="line">    app_id: &#39;&#123;&#123;daovoice.app_id&#125;&#125;&#39;,   &#x2F;&#x2F; 必填，您的 APP 标识</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    launcher: &#123;</span><br><span class="line">      disableLauncherIcon: true, &#x2F;&#x2F; 悬浮 ICON 是否显示</span><br><span class="line">      defaultEnterView: &#39;list&#39;, &#x2F;&#x2F; &#39;list&#39; 或 &#39;new&#39; 默认是 list(在对话列表是空的时候默认切换到 new)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  daovoice(&#39;update&#39;);</span><br><span class="line">  </span><br><span class="line">  var DaoCloudIsShow &#x3D; false;</span><br><span class="line">  &#x2F;&#x2F; 监听显示事件回调</span><br><span class="line">  daovoice(&#39;onShow&#39;, function()&#123;</span><br><span class="line">    DaoCloudIsShow &#x3D; ture;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#x2F;&#x2F; 监听隐藏事件回调</span><br><span class="line">  daovoice(&#39;onHide&#39;, function()&#123;</span><br><span class="line">    DaoCloudIsShow &#x3D; false;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#x2F;&#x2F; 点击按钮时运行的方法</span><br><span class="line">  var openDaoCloud &#x3D; function() &#123;</span><br><span class="line">    if( DaoCloudIsShow ) &#123;</span><br><span class="line">      daovoice(&#39;hide&#39;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      daovoice(&#39;show&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>添加完成后运行 <code>hexo s</code> 就可以看到最终效果了。</p><p>最后到 DaoVoice 工作台右上角选择管理员，微信绑定,可以绑定你的微信号，关注公众号后打开小程序，就可以实时收发消息，有新的消息也会通过微信通知，设置页面如下：</p><p><img data-src="/images/daovoice-band-wechat.png" alt="绑定微信"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们已经集成了 Valine 文章评论功能，在本章，我们将集成 DaoVoice 在线联系功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客（集成Valine文章评论功能）</title>
    <link href="http://leezhiy.github.io/2020/03/20/2020-03-20-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%9B%86%E6%88%90Valine%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/20/2020-03-20-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%9B%86%E6%88%90Valine%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%EF%BC%89/</id>
    <published>2020-03-20T15:22:00.000Z</published>
    <updated>2020-04-17T09:12:54.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们已经将 Hexo + Next 部署到了 GitHub Pages 中， 在本章我们将集成 Valine 评论系统。</p><a id="more"></a><h2 id="为什么选择-Valine"><a href="#为什么选择-Valine" class="headerlink" title="为什么选择 Valine"></a>为什么选择 Valine</h2><p>在笔者进行评论系统选择时，主要对比了 disqus Valine gittalk 三种:</p><ul><li><p>disqus 漂亮，全球化评论插件，但需要翻墙</p></li><li><p>valine 样式简约 无登录 自带Leancloud的阅读统计功能</p></li><li><p>gitalk 支持github登录</p></li></ul><p>对比之下，最终选定了这款 Valine</p><h2 id="注册-LeanClound-获取APP-ID-和-APP-Key"><a href="#注册-LeanClound-获取APP-ID-和-APP-Key" class="headerlink" title="注册 LeanClound,获取APP ID 和 APP Key"></a>注册 LeanClound,获取APP ID 和 APP Key</h2><p>Valine 是基于 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 作为数据存储的，所以需要注册一个账号，注册完成后，我们找到创建应用</p><p><img data-src="/images/valine-create-app.png" alt="创建应用"></p><p>在这里填写你的应用名称,名称可以自己定义，然后下面选择 <strong>开发版</strong> 点击 <strong>创建</strong>。</p><p><img data-src="/images/valine-app.png" alt="应用"></p><p>然后点击应用进入设置</p><p>在设置页，我们首先点击存储，查看是否有 Comment 表和 Counter 表，没有则创建，权限设为无限制。</p><p><img data-src="/images/valine-app-create-class.png" alt="添加表"></p><p>然后点击设置 &gt; 安全中心 ,将除了数据存储的服务全部关闭。</p><p><img data-src="/images/valine-app-close-service.png" alt="关闭其他服务"></p><p>最后点击 <strong>应用 Keys</strong> 取得我们 <strong>AppKey</strong> 和 <strong>App id</strong></p><h2 id="在-Hexo-NexT-主题中配置"><a href="#在-Hexo-NexT-主题中配置" class="headerlink" title="在 Hexo NexT 主题中配置"></a>在 Hexo NexT 主题中配置</h2><p>首先打开 <a href="https://www.bootcdn.cn/" target="_blank" rel="noopener">BootCND</a> 获取最新 valine.min.js 的 CDN 地址</p><p><img data-src="/images/valine-bootcdn.png" alt="BootCDN"></p><p>然后打开 <span class="label success">主题配置文件</span> ，搜索 <code>valine</code> 关键字，配置 CDN</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Valine</span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.10/Valine.min.js</span></span><br><span class="line"> valine: //cdn.bootcss.com/valine/1.4.4/Valine.min.js</span><br></pre></td></tr></table></figure><p>继续搜索，配置 Valine 功能</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Valine</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: # 你自己的 Appid</span><br><span class="line">  appkey:  # 你自己的 Appkey</span><br><span class="line">  notify: false  # 邮件提醒</span><br><span class="line">  verify: false # 验证码</span><br><span class="line">  placeholder: 聊五分钱的天吗？|ω･)و ̑̑༉ # 聊天框默认显示</span><br><span class="line">  avatar: mm # 头像设置</span><br><span class="line">  guest_info: nick,mail,link # 游客信息 名称 邮件 网络地址</span><br><span class="line">  pageSize: 10 # 每页数量</span><br><span class="line">  language: zh-cn # 语言</span><br><span class="line">  visitor: false # 文章阅读统计</span><br><span class="line">  comment_count: true # 评论数量显示</span><br><span class="line">  recordIP: false # 评论者的IP</span><br><span class="line">  serverURLs: # 博客启用自定义域名后，请在此填写（默认情况下会自动检测到，无需填写）</span><br><span class="line"><span class="meta">  #</span><span class="bash">post_meta_order: 0</span></span><br></pre></td></tr></table></figure><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="指定文章（页面）评论功能是否开启"><a href="#指定文章（页面）评论功能是否开启" class="headerlink" title="指定文章（页面）评论功能是否开启"></a>指定文章（页面）评论功能是否开启</h3><p>在 Hexo 博客中，评论的功能是在所有页面都默认开启的，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。</p><p>我们可以在 Front-matter 中通过 <strong>comments</strong> 属性设置true或false控制该页面或者是文章的评论功能是否打开，如我设置标签页面的评论功能关闭：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2020-03-14 21:37:23</span><br><span class="line">type: "tags"</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><h3 id="自定义头像"><a href="#自定义头像" class="headerlink" title="自定义头像"></a>自定义头像</h3><p>参考：<a href="https://valine.js.org/avatar.html" target="_blank" rel="noopener">https://valine.js.org/avatar.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们已经将 Hexo + Next 部署到了 GitHub Pages 中， 在本章我们将集成 Valine 评论系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客（Next 主题设置）</title>
    <link href="http://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88NexT%20%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88NexT%20%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%EF%BC%89/</id>
    <published>2020-03-15T10:30:17.000Z</published>
    <updated>2020-04-18T15:55:12.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们已经将 Hexo + Next 安装到了本地， 在本章我们将对 NexT 主题进行一些个性化的设置。</p><a id="more"></a><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code> 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>我们约定，将前者称为 <span class="label primary">站点配置文件</span>，后者称为 <span class="label success">主题配置文件</span></p><h3 id="站点初始设置"><a href="#站点初始设置" class="headerlink" title="站点初始设置"></a>站点初始设置</h3><p>打开 <span class="label primary">站点配置文件</span> ，修改内容如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Site</span></span><br><span class="line">title: Leezhiy Blog # 博客标题</span><br><span class="line">subtitle: '我秃了，也变强了' # 副标题</span><br><span class="line">description: '程序，搞起来很轻松的，就是头冷' # 个人详情</span><br><span class="line">keywords:  # 关键字</span><br><span class="line">author: Li Zhiyuan # 博客作者</span><br><span class="line">language: zh-CN # 语言 参见主题的文档进行设置</span><br><span class="line">timezone: 'Asia/Shanghai' # 时区 默认为电脑的时区</span><br></pre></td></tr></table></figure><h3 id="设置主题风格"><a href="#设置主题风格" class="headerlink" title="设置主题风格"></a>设置主题风格</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>scheme</code> 关键字，将你需用启用的 <code>scheme</code> 前面注释 # 去除即可。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Scheme Settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Schemes</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Muse <span class="comment"># 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Mist <span class="comment"># Muse 的紧凑版本，整洁有序的单栏外观</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Pisces <span class="comment"># 双栏 Scheme，小家碧玉似的清新</span></span></span><br><span class="line">scheme: Gemini # 类似 Pisces</span><br></pre></td></tr></table></figure><h3 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h3><p>打开 git bash, 创建页面</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page categories <span class="comment"># 创建分类页面</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page tags <span class="comment"># 创建标签页面</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new custom_name <span class="comment"># 创建关于页面</span></span></span><br></pre></td></tr></table></figure><p>设置各个页面的头信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">blog&#x2F;source&#x2F;custom-name&#x2F;index.md</span><br><span class="line"></span><br><span class="line">title: 关于我</span><br><span class="line">date: 2020-03-14 12:39:04</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">blog&#x2F;source&#x2F;tags&#x2F;index.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-03-14 21:37:23</span><br><span class="line">type: tags</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">blog&#x2F;source&#x2F;categories&#x2F;index.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-03-14 21:37:23</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>menu</code> 关键字，修改如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Menu Settings 菜单设置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用法: `Key: /link/ || icon` </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Key 表示菜单名称。 如果可以翻译，则将加载翻译后文本，否则将使用原来的名称。Key 区分大小写</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  `||` 分隔符之前是菜单的链接，之后是 Font Awesome icon </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在子目录（例如：yoursite.com/blog）中运行站点时，需要去掉链接前面的斜杠  (例如：/archives -&gt; archives)。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 外部url应以http://或https开头：</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  about: /custom-name/ || fa fa-user</span><br><span class="line"><span class="meta">  #</span><span class="bash">schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启/关闭菜单图标 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enable / Disable menu icons / item badges.</span></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: true</span><br><span class="line">  badges: false</span><br></pre></td></tr></table></figure><h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>准备一个网络图片地址或一张图片放到 blog/themes/next/source/images/ 目录下，打开 <span class="label success">主题配置文件</span> ，搜索 <code>avatar</code> 关键字，修改如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Replace the default image and <span class="built_in">set</span> the url here.</span></span><br><span class="line">  url: /images/avatar.png # 你自己的图片名称或完整的网络图片地址</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, the avatar will be dispalyed <span class="keyword">in</span> circle.</span></span><br><span class="line">  rounded: true # 是否为圆形头像</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: false # 设置成 true ,鼠标放上去会不停转圈</span><br></pre></td></tr></table></figure><h3 id="代码块样式设置"><a href="#代码块样式设置" class="headerlink" title="代码块样式设置"></a>代码块样式设置</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>codeblock</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">codeblock:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Code Highlight theme</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  highlight_theme: night eighties # 高亮主题</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Add copy button on codeblock</span></span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true # 是否显示复制按钮</span><br><span class="line">    # Show text copy result.</span><br><span class="line">    show_result: true # 是否显示复制结果</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: default # 复制按钮样式</span><br></pre></td></tr></table></figure><h3 id="回到顶部按钮设置"><a href="#回到顶部按钮设置" class="headerlink" title="回到顶部按钮设置"></a>回到顶部按钮设置</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>back2top</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Back to top <span class="keyword">in</span> sidebar.</span></span><br><span class="line">  sidebar: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Scroll percent label <span class="keyword">in</span> b2t button.</span></span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure><h3 id="社交媒体联系方式修改"><a href="#社交媒体联系方式修改" class="headerlink" title="社交媒体联系方式修改"></a>社交媒体联系方式修改</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>social</code> 关键字，将其中地址替换成自己的便可</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Social Links</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Key is the link label showing to end users.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/leezhiy || fab fa-github</span><br><span class="line">  E-Mail: mailto:18500754397@163.com || fa fa-envelope</span><br><span class="line">  微博: https://weibo.com/5678634433 || fab fa-weibo</span><br><span class="line">  知乎: https://www.zhihu.com/people/li-zhi-yuan-13-7 || fa fa-globe</span><br><span class="line">  Gitee: https://gitee.com/leezhiy || fab fa-git</span><br><span class="line">  网易云: https://music.163.com/#/user/home?id=131550901 || fa fa-music</span><br><span class="line"><span class="meta">  #</span><span class="bash">Google: https://plus.google.com/youname || fab fa-google</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true # 图标是否开启</span><br><span class="line">  icons_only: false # 是否只有图标</span><br><span class="line">  transition: false  # 动画效果</span><br></pre></td></tr></table></figure><h3 id="增加友情链接"><a href="#增加友情链接" class="headerlink" title="增加友情链接"></a>增加友情链接</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>links_settings</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Blog rolls</span></span><br><span class="line">links_settings:</span><br><span class="line">  icon: fa fa-link</span><br><span class="line">  title: 友情连接</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: block | inline</span></span><br><span class="line">  layout: block</span><br><span class="line"></span><br><span class="line">links:</span><br><span class="line">  友情链接1: https://www.baidu.com</span><br><span class="line">  友情链接2: https://www.baidu.com</span><br><span class="line">  友情链接3: https://www.baidu.com</span><br><span class="line">  友情链接4: https://www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="将文章底部-换成标签图标"><a href="#将文章底部-换成标签图标" class="headerlink" title="将文章底部 # 换成标签图标"></a>将文章底部 # 换成标签图标</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>tag_icon</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Use icon instead of the symblo <span class="comment"># to indicate the tag at the bottom of the post</span></span></span><br><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure><h3 id="设置打赏"><a href="#设置打赏" class="headerlink" title="设置打赏"></a>设置打赏</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>reward</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Reward (Donate)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Front-matter variable (unsupport animation).</span></span><br><span class="line">reward_settings:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, reward will be displayed <span class="keyword">in</span> every article by default.</span></span><br><span class="line">  enable: ture #打赏开关</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 如果你觉得这篇文章对你有用，欢迎赞赏哦~</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png # 你自己的微信收款码</span><br><span class="line">  alipay: /images/alipay.png # 你自己的支付宝收款码</span><br><span class="line"><span class="meta">  #</span><span class="bash">paypal: /images/paypal.png</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure><h3 id="设置订阅"><a href="#设置订阅" class="headerlink" title="设置订阅"></a>设置订阅</h3><p>安装 hexo-generator-feed 插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-feed --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>reward</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class="line">follow_me:</span><br><span class="line"><span class="meta">  #</span><span class="bash">Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  WeChat: /images/wechat_channel.png || fab fa-weixin # 你自己的微信频道二维码</span><br><span class="line">  RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure><h3 id="开启阅读进度条"><a href="#开启阅读进度条" class="headerlink" title="开启阅读进度条"></a>开启阅读进度条</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>reading_progress</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Reading progress bar</span></span><br><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: top | bottom</span></span><br><span class="line">  position: top</span><br><span class="line">  color: "#37c6c0"</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure><h3 id="右上角-Github-按钮开启"><a href="#右上角-Github-按钮开启" class="headerlink" title="右上角 Github 按钮开启"></a>右上角 Github 按钮开启</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>github_banner</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> `Follow me on GitHub` banner <span class="keyword">in</span> the top-right corner.</span></span><br><span class="line">github_banner:</span><br><span class="line">  enable: ture</span><br><span class="line">  permalink: https://github.com/leezhiy</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure><h3 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>Font Settings</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Font Settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See: https://theme-next.org/docs/theme-settings/<span class="comment">#Fonts-Customization</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Find fonts on Google Fonts (https://www.google.com/fonts)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> All fonts <span class="built_in">set</span> here will have the following styles:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   light | light italic | normal | normal italic | bold | bold italic</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To avoid space between header and sidebar <span class="keyword">in</span> scheme Pisces / Gemini, Web Safe fonts are recommended <span class="keyword">for</span> `global` (and `title`):</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Font options:</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> `external: <span class="literal">true</span>` will load this font family from `host` above.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> `family: Times New Roman`. Without any quotes.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Global font settings used <span class="keyword">for</span> all elements inside &lt;body&gt;.</span></span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Font settings <span class="keyword">for</span> site title (.site-title).</span></span><br><span class="line">  title:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lobster Two</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Font settings <span class="keyword">for</span> headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family: Amita</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Font settings <span class="keyword">for</span> posts (.post-body).</span></span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Font settings <span class="keyword">for</span> &lt;code&gt; and code blocks.</span></span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br></pre></td></tr></table></figure><h3 id="底部设置"><a href="#底部设置" class="headerlink" title="底部设置"></a>底部设置</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>footer</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  since: 2015 # 网站开始年份</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Icon between year and copyright info.</span></span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in Font Awesome. See: https://fontawesome.com/icons</span><br><span class="line">    name: fa fa-heart # 底部图标</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: true # 动画效果</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: "#ff0000"</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">  copyright: # 版权信息</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Powered by Hexo &amp; NexT</span></span><br><span class="line">  powered: false # 是否显示 Powered by Hexo &amp; NexT</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Beian ICP and gongan information <span class="keyword">for</span> Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  beian: # 备案信息</span><br><span class="line">    enable: false</span><br><span class="line">    icp: </span><br><span class="line">    # The digit in the num of gongan beian.</span><br><span class="line">    gongan_id: # 公安备案ID</span><br><span class="line">    # The full num of gongan beian.</span><br><span class="line">    gongan_num: # 公安备案编号</span><br><span class="line">    # The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span><br><span class="line">    gongan_icon_url: # 公安备案图标</span><br></pre></td></tr></table></figure><h3 id="版权信息设置"><a href="#版权信息设置" class="headerlink" title="版权信息设置"></a>版权信息设置</h3><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>creative_commons</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can <span class="built_in">set</span> a language value <span class="keyword">if</span> you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CC licenses are available <span class="keyword">in</span> 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa # 版权信息类别 选项： by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">  sidebar: true # 侧边栏显示状态</span><br><span class="line">  post: true # 文章底部显示状态</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>local_search</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Local Search</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If auto, trigger search by changing input.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 3</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: false</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Preload the search data when the page loads.</span></span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure><h3 id="添加相关文章"><a href="#添加相关文章" class="headerlink" title="添加相关文章"></a>添加相关文章</h3><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-related-popular-posts --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>related_posts</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Related popular posts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dependencies: https://github.com/tea3/hexo-related-popular-posts</span></span><br><span class="line">related_posts:</span><br><span class="line">  enable: true</span><br><span class="line">  title: # Custom header, leave empty to use the default one</span><br><span class="line">  display_in_home: true</span><br><span class="line">  params:</span><br><span class="line">    maxCount: 5</span><br><span class="line">    #PPMixingRate: 0.0</span><br><span class="line">    #isDate: false</span><br><span class="line">    #isImage: false</span><br><span class="line">    #isExcerpt: false</span><br></pre></td></tr></table></figure><h3 id="博客图片插件"><a href="#博客图片插件" class="headerlink" title="博客图片插件"></a>博客图片插件</h3><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install medium-zoom</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>mediumzoom</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> A JavaScript library <span class="keyword">for</span> zooming images like Medium.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Do not <span class="built_in">enable</span> both `fancybox` and `mediumzoom`.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: https://github.com/francoischalifour/medium-zoom</span></span><br><span class="line">mediumzoom: true</span><br></pre></td></tr></table></figure><h3 id="中英文之间自动加空格"><a href="#中英文之间自动加空格" class="headerlink" title="中英文之间自动加空格"></a>中英文之间自动加空格</h3><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install pangu --save</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>pangu</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Pangu Support</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: https://github.com/vinta/pangu.js</span></span><br><span class="line">pangu: true</span><br></pre></td></tr></table></figure><h3 id="网页加载进度条"><a href="#网页加载进度条" class="headerlink" title="网页加载进度条"></a>网页加载进度条</h3><p>打开博客目录，运行 git bash </p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog/themes/next</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace <span class="built_in">source</span>/lib/pace</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>pace</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Themes list:</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure><h3 id="分享插件"><a href="#分享插件" class="headerlink" title="分享插件"></a>分享插件</h3><p>打开博客目录，运行 git bash </p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install theme-next/hexo-next-share</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，在最底部添加</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> NeedMoreShare2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dependencies: https://github.com/theme-next/theme-next-needmoreshare2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: https://github.com/revir/need-more-share2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> iconStyle: default | box</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> boxForm: horizontal | vertical</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> position: top / middle / bottom + Left / Center / Right</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> networks:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Weibo | Wechat | Douban | QQZone | Twitter | Facebook | Linkedin | Mailto | Reddit | Delicious | StumbleUpon | Pinterest</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> GooglePlus | Tumblr | GoogleBookmarks | Newsvine | Evernote | Friendfeed | Vkontakte | Odnoklassniki | Mailru</span></span><br><span class="line">needmoreshare:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    js: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.js</span><br><span class="line">    css: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.css</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: true</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: default</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook,Linkedin,Mailto,Reddit,Delicious,StumbleUpon,Pinterest,GooglePlus,Tumblr,GoogleBookmarks,Newsvine,Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru</span><br><span class="line">  float:</span><br><span class="line">    enable: ture</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook,Linkedin</span><br></pre></td></tr></table></figure><h2 id="博客速度优化"><a href="#博客速度优化" class="headerlink" title="博客速度优化"></a>博客速度优化</h2><h3 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h3><p>打开博客目录，运行 git bash </p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog/themes/next</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pjax <span class="built_in">source</span>/lib/pjax</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>pjax</code> 关键字，设置 Pjax 为开启状态</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Easily <span class="built_in">enable</span> fast Ajax navigation on your website.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dependencies: https://github.com/theme-next/theme-next-pjax</span></span><br><span class="line">pjax: true</span><br></pre></td></tr></table></figure><h3 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h3><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install --save lozad</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label success">主题配置文件</span> ，搜索 <code>lazyloag</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改一</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Vanilla JavaScript plugin <span class="keyword">for</span> lazyloading images.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: https://github.com/ApoorvSaxena/lozad.js</span></span><br><span class="line">lazyload: true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改二</span></span><br><span class="line">comments:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: tabs | buttons</span></span><br><span class="line">  style: tabs</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Choose a comment system to be displayed by default.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class="line">  active:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Setting `<span class="literal">true</span>` means remembering the comment system selected by the visitor.</span></span><br><span class="line">  storage: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Lazyload all comment systems.</span></span><br><span class="line">  lazyload: true</span><br></pre></td></tr></table></figure><h3 id="安装-hexo-filter-optimize-插件优化页面加载速度"><a href="#安装-hexo-filter-optimize-插件优化页面加载速度" class="headerlink" title="安装 hexo-filter-optimize 插件优化页面加载速度"></a>安装 hexo-filter-optimize 插件优化页面加载速度</h3><p><strong>注：此插件可能会导致Font Awesome和PJAX无法加载，请谨慎安装</strong></p><p>打开博客目录，运行 git bash ，安装插件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-filter-optimize</span></span><br></pre></td></tr></table></figure><p>打开 <span class="label primary">站点配置文件</span> ，搜索 <code>lazyloag</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">filter_optimize:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> remove the surrounding comments <span class="keyword">in</span> each of the bundled files</span></span><br><span class="line">  remove_comments: false</span><br><span class="line">  css:</span><br><span class="line">    # minify all css files</span><br><span class="line">    minify: true</span><br><span class="line">    # bundle loaded css files into one</span><br><span class="line">    bundle: true</span><br><span class="line">    # use a script block to load css elements dynamically</span><br><span class="line">    delivery: true</span><br><span class="line">    # make specific css content inline into the html page</span><br><span class="line">    #   - only support the full path</span><br><span class="line">    #   - default is ['css/main.css']</span><br><span class="line">    inlines:</span><br><span class="line">    excludes:</span><br><span class="line">  js:</span><br><span class="line">    # minify all js files</span><br><span class="line">    minify: true</span><br><span class="line">    # bundle loaded js files into one</span><br><span class="line">    bundle: true</span><br><span class="line">    excludes:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="built_in">set</span> the priority of this plugin,</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> lower means it will be executed first, default of Hexo is 10</span></span><br><span class="line">  priority: 12</span><br></pre></td></tr></table></figure><h3 id="网站动态元素延时加载"><a href="#网站动态元素延时加载" class="headerlink" title="网站动态元素延时加载"></a>网站动态元素延时加载</h3><p>我们的网站添加了许多动态元素之后，加载速度会变慢，所以可以先不加载动态元素，等静态元素加载完之后再加载动态元素，这样就加速了网站的登入。可打开<span class="label success">主题配置文件</span> ，搜索 <code>motion</code> 关键字，设置如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Animation Settings</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Use velocity to animate everything.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information: http://velocityjs.org</span></span><br><span class="line">motion:</span><br><span class="line">  enable: false</span><br><span class="line">  async: false</span><br><span class="line">  transition:</span><br><span class="line">    # Transition variants:</span><br><span class="line">    # fadeIn | flipXIn | flipYIn | flipBounceXIn | flipBounceYIn</span><br><span class="line">    # swoopIn | whirlIn | shrinkIn | expandIn</span><br><span class="line">    # bounceIn | bounceUpIn | bounceDownIn | bounceLeftIn | bounceRightIn</span><br><span class="line">    # slideUpIn | slideDownIn | slideLeftIn | slideRightIn</span><br><span class="line">    # slideUpBigIn | slideDownBigIn | slideLeftBigIn | slideRightBigIn</span><br><span class="line">    # perspectiveUpIn | perspectiveDownIn | perspectiveLeftIn | perspectiveRightIn</span><br><span class="line">    post_block: fadeIn</span><br><span class="line">    post_header: slideDownIn</span><br><span class="line">    post_body: slideDownIn</span><br><span class="line">    coll_header: slideLeftIn</span><br><span class="line">    # Only for Pisces | Gemini.</span><br><span class="line">    sidebar: slideUpIn</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们已经将 Hexo + Next 安装到了本地， 在本章我们将对 NexT 主题进行一些个性化的设置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客（Github Pages 托管 Hexo）</title>
    <link href="http://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github-Pages-%E6%89%98%E7%AE%A1-Hexo%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github-Pages-%E6%89%98%E7%AE%A1-Hexo%EF%BC%89/</id>
    <published>2020-03-15T08:55:05.000Z</published>
    <updated>2020-04-17T09:15:55.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。</p><p>在上一章，我们对博客进行了一些基础设置并安装了几个第三方插件， 在本章我们将把博客部署到 Github Pages 中。</p><a id="more"></a><h2 id="什么是-GitHub-Pages"><a href="#什么是-GitHub-Pages" class="headerlink" title="什么是 GitHub Pages"></a>什么是 GitHub Pages</h2><p><code>GitHub Pages</code> 是一个静态站点托管服务。</p><p><code>Github page</code> 旨在直接从 <code>GitHub</code> 仓库中直接托管您的个人、组织或项目页面。了解关于 <code>GitHub Pages</code> 网站不同类型的更多信息，请参阅<a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="noopener">用户、组织和项目页面</a>。</p><p><code>GitHub Pages</code> 是静态站点托管服务器，不支持 PHP ，Ruby 或 Python 等服务器端代码。</p><h3 id="GitHub-Pages使用指南"><a href="#GitHub-Pages使用指南" class="headerlink" title="GitHub Pages使用指南"></a>GitHub Pages使用指南</h3><p>在2016年6月15日之后创建的 GitHub Pages 并且使用 github.io 作为域名的网站提供了 HTTPS 支持。如果您在2016年6月15日之前创建了您的网站，您可以为您的网站启用 HTTPS 支持。</p><p>GitHub Pages 网站不应用于敏感交易，如发送密码或信用卡号码。</p><p>您使用 GitHub 页面需遵守 GitHub 服务条款，包括禁止转售。</p><p>警告：GitHub Pages网站在互联网上是公开的，即使他们的存储库是私有的。 如果您的页面存储库中有敏感数据，则可能需要在发布之前将其删除。</p><h3 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h3><p>GitHub Pages 网站受到以下使用限制：</p><ul><li><p>GitHub Pages 源仓库建议限制为1GB；</p></li><li><p>发布的 GitHub Pages 网站可能不超过1GB；</p></li><li><p>GitHub Pages 网站每月的带宽限制为100GB；</p></li><li><p>GitHub Pages 网站每小时限制10个软件。</p></li></ul><p>如果您的网站超过这些使用配额，我们可能无法为您的网站提供服务，或者您可能会收到 GitHub Support 的礼貌的电子邮件，建议您减少网站对我们的服务器影响的策略，包括放置第三方内容分发网络 ，利用其他GitHub功能（如发行版），或转移到可能更适合您需求的其他托管服务。</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.<br>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a>。<br>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code><br>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></p><div class="note danger">            <h3 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h3><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p>          </div><div class="note info">            <h3 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h3><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p>          </div><p>安装完成后，还需要最后一步设置，在命令行输入</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"Your Name"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">"email@example.com"</span></span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> <code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="注册-GitHub-账号"><a href="#注册-GitHub-账号" class="headerlink" title="注册 GitHub 账号"></a>注册 GitHub 账号</h2><p>GitHub官方网站：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><p>进入<a href="https://github.com/join" target="_blank" rel="noopener">GitHub官网注册页面</a>，会见到所示界面，分别输入Username，Email和Password，然后点击Create account。</p><p>注意：该处的Username、Email和Pssword一定要记住，后边要多次使用，如果太长比较难记，建议最好记在本子上。</p><p><img data-src="/images/github-create-account.png" alt="GitHub 注册页面"></p><p>然后我们直接去注册填写的邮箱进行邮箱验证，验证通过后点击 Create a repository 创建版本仓库，如下图<br><img data-src="/images/github-email-verified.png" alt="邮箱验证成功"></p><p>来到创建版本库页面如下图所示，填写Repository name，注意其格式不要写错。</p><p>例如：你的Username是xiaoming，那你的Repository name就是xiaoming.github.io。</p><p><img data-src="/images/github-create-repository.png" alt="创建版本库"></p><p>点击Create repository，完成创建。</p><h2 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h2><p>配置shh key是让本地git项目与远程的github建立联系</p><ul><li><p>检查是否已经有SSH Key，打开Git Bash，输入</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/.ssh</span></span><br></pre></td></tr></table></figure></li><li><p>如果没有.ssh这个目录，则生成一个新的SSH，输入</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"your e-mail"</span></span></span><br></pre></td></tr></table></figure></li></ul><p><strong>注意:</strong>  </p><ol><li>此处的邮箱地址，你可以输入自己的邮箱地址；</li><li>此处的「-C」的是大写的「C」</li></ol><ul><li><p>之后会出现</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.  </span><br><span class="line">Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):  </span><br><span class="line">//到这里可以直接回车将密钥按默认文件进行存储</span><br></pre></td></tr></table></figure></li><li><p>然后会出现</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):  </span><br><span class="line">//这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。这里我们暂时不输入</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure></li><li><p>接下来会显示</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in /c/Users/you/.ssh/id_rsa.  </span><br><span class="line">Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.  </span><br><span class="line">The key fingerprint is:  </span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱  </span><br><span class="line">The key's randomart image is:  </span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure></li><li><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> clip &lt; ~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure><h2 id="添加-SSH-Key-到-GitHub"><a href="#添加-SSH-Key-到-GitHub" class="headerlink" title="添加 SSH Key 到 GitHub"></a>添加 SSH Key 到 GitHub</h2></li><li><p>登陆 GitHub，进入 Settings：<br><img data-src="/images/github-setting.png/" alt="GitHub 设置"></p></li><li><p>点击左侧菜单 SSH and GPG Keys：<br><img data-src="/images/github-ssh-setting.png" alt="GitHub SSH 设置"></p></li><li><p>选择 New SSH key：<br><img data-src="/images/github-ssh-new.png" alt="GitHub 新建SSH"></p></li><li><p>粘贴密钥：<br><img data-src="/images/github-create-ssh.png" alt="粘贴秘钥"></p></li></ul><h2 id="测试-SSH-Key-是否配置成功"><a href="#测试-SSH-Key-是否配置成功" class="headerlink" title="测试 SSH Key 是否配置成功"></a>测试 SSH Key 是否配置成功</h2><ul><li><p>输入以下命令：注意：<a href="mailto:git@github.com">git@github.com</a>不要做任何更改！</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br></pre></td></tr></table></figure></li><li><p>如配置了密码则要输入密码,输完按回车</p><p>如果显示以下内容，则说明Github中的ssh配置成功。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ul><h2 id="将博客网站上传到-GitHub"><a href="#将博客网站上传到-GitHub" class="headerlink" title="将博客网站上传到 GitHub"></a>将博客网站上传到 GitHub</h2><ul><li><p>打开 Hexo 文件夹中的 <code>_config.yml</code> 文件，搜索 <code>deploy</code> 关键字，修改如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Deployment</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/leezhiy/leezhiy.github.io # 这里换成自己的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>git bash</code> 执行以下命令</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure></li><li><p>或者直接执行</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g -d</span></span><br></pre></td></tr></table></figure></li><li><p>执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></li><li><p>需要执行以下命令再安装一次：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>再执行 <code>hexo g -d</code>，你的博客就会部署到 Github 上了</p><p>此时, 通过访问 <a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a> 可以看到默认的Hexo首页面（与之前本地测试时一样）。</p></li></ul><h2 id="在博客上发表文章"><a href="#在博客上发表文章" class="headerlink" title="在博客上发表文章"></a>在博客上发表文章</h2><p>博客已经成功搭建了，但是我们该怎么写博客呢？</p><ul><li><p>新建一个空文章，输入以下命令，会在项目 <strong>\Hexo\source_posts</strong> 中生成 文章标题 <strong>.md</strong> 文件，文章标题根据需要命名</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo n <span class="string">"文章标题"</span></span></span><br></pre></td></tr></table></figure><p>当然也可以直接在 <strong>\Hexo\source_posts</strong> 目录下右键鼠标新建文本文档，改后缀为 <strong>.md</strong> 即可，这种方法比较方便</p></li><li><p>用编辑器编写文章</p><p><strong>md</strong> 全称 <strong>Markdown</strong>， Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会， <strong>.md</strong> 文件可以使用支持 Markdown 语法的编辑器编辑，然后保存文件到 <strong>\Hexo\source_posts</strong>文件夹下即可</p><p>文章标题，标签，分类，封面图片，摘要等，可以在 Front-matter 里面配置（Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，更多可以查看 <a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">官方文档</a> ），举个例子：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">layout: 页面布局（配合主题文档使用）</span><br><span class="line">title: 文章名称</span><br><span class="line">date: 文章日期</span><br><span class="line">comments: 文章是否开启评论</span><br><span class="line">photos: 文章封面图（仅部分主题支持）</span><br><span class="line">tags: </span><br><span class="line">  - 文章标签一</span><br><span class="line">  - 文章标签二</span><br><span class="line">categories: 文章分类</span><br><span class="line">description: 文章描述，即要在首页显示的摘要（仅部分主题支持）</span><br><span class="line">---</span><br><span class="line">这里是摘要</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">这里是正文</span><br><span class="line"></span><br><span class="line">注意：description 和 &lt;!-- more --&gt; 方式显示摘要二选一即可，部分主题不支持description，每个配置英文冒号后面要空一格，不同主题配置有所差异，具体要参考主题文档</span><br></pre></td></tr></table></figure></li><li><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d</span></span><br></pre></td></tr></table></figure></li><li><p>或者将两个命令合二为一输入以下命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo d -g</span></span><br></pre></td></tr></table></figure></li></ul><p>现在访问你的博客就可以看见写好的文章啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。&lt;/p&gt;
&lt;p&gt;在上一章，我们对博客进行了一些基础设置并安装了几个第三方插件， 在本章我们将把博客部署到 Github Pages 中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next搭建个人博客（安装Hexo及主题）</title>
    <link href="http://leezhiy.github.io/2020/03/14/2020-03-14-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%89%E8%A3%85Hexo%E5%8F%8A%E4%B8%BB%E9%A2%98%EF%BC%89/"/>
    <id>http://leezhiy.github.io/2020/03/14/2020-03-14-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%89%E8%A3%85Hexo%E5%8F%8A%E4%B8%BB%E9%A2%98%EF%BC%89/</id>
    <published>2020-03-14T05:09:00.000Z</published>
    <updated>2020-04-17T09:15:55.182Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 <span class="label info">Hexo+NexT+Github Pages</span> 的搭建步骤。 </p><p>本章将从零开始，搭建一个 Hexo + NexT 的本地博客系统。</p><a id="more"></a><h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 是高效的静态站点生成框架，她基于 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>，相较于Jekyll他有以下特点:</p><ul><li><h3 id="超快速度"><a href="#超快速度" class="headerlink" title=" 超快速度"></a><i class="fa fa-bolt"></i> 超快速度</h3><p>  Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p></li><li><h3 id="支持Markdown"><a href="#支持Markdown" class="headerlink" title=" 支持Markdown"></a><i class="fa fa-pencil"></i> 支持Markdown</h3><p>  Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p></li><li><h3 id="一键部署"><a href="#一键部署" class="headerlink" title=" 一键部署"></a><i class="fa fa-cloud-upload"></i> 一键部署</h3><p>  只需一条指令即可部署到Github Pages，或其他网站</p></li><li><h3 id="丰富的插件"><a href="#丰富的插件" class="headerlink" title=" 丰富的插件"></a><i class="fa fa-cog"></i> 丰富的插件</h3><p>  Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</p></li></ul><p>通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">标签插件</a>来快速的插入特定形式的内容。</p><p>基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>。<br><a href="https://theme-next.org/" target="_blank" rel="noopener">NexT</a> 因其精简的风格，一直被广大用户所喜爱。</p><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><div class="note info">            <ul><li>Node.js (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)</li><li>Git</li></ul>          </div><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo 步骤。</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.<br>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a>。<br>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code><br>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></p><div class="note danger">            <h3 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h3><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p>          </div><div class="note info">            <h3 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h3><p>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p>          </div><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝 Node.js 镜像</a> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/" target="_blank" rel="noopener">nvs</a>（推荐）或者<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> 或 <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">指导</a></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><div class="note info">            <h3 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h3><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p>          </div><div class="note danger">            <h3 id="For-Mac-Linux-用户"><a href="#For-Mac-Linux-用户" class="headerlink" title="For Mac / Linux 用户"></a>For Mac / Linux 用户</h3><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p>          </div><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>打开git bash，为了避免出现错误后面的操作在git bash进行</p><p>使用 npm 安装 Hexo</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><p>此命令会把 hexo.cmd 安装到全局包仓库中，由于该仓库文件夹在 Windows 系统的 path 中。所以你就可以在任意位置执行 hexo 命令了。</p><p>执行一下命令确认hexo安装完好</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo -v</span></span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.17763 win32 x64</span><br><span class="line">node: 12.16.2</span><br><span class="line">v8: 7.8.279.23-node.34</span><br><span class="line">uv: 1.34.2</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1e</span><br><span class="line">cldr: 36.0</span><br><span class="line">icu: 65.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，我们需要为博客创建一个指定文件夹，在指定文件夹下执行以下命令，Hexo 将会在该文件夹中新建所需要的文件。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init</span></span><br></pre></td></tr></table></figure><p>安装完成后，指定文件夹目录如下</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.  </span><br><span class="line">├── _config.yml  </span><br><span class="line">├── package.json  </span><br><span class="line">├── scaffolds  </span><br><span class="line">├── source  </span><br><span class="line">|   ├── _drafts  </span><br><span class="line">|   └── _posts  </span><br><span class="line">└──</span><br></pre></td></tr></table></figure><p>我们继续执行命令</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo generate <span class="comment"># 生成静态资源</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server --debug <span class="comment"># 启动服务器 并开启调试模式</span></span></span><br></pre></td></tr></table></figure><p>我们在浏览器中访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，就可以看到基于 Hexo 的默认主题的原型</p><h2 id="安装-Hexo-主题"><a href="#安装-Hexo-主题" class="headerlink" title="安装 Hexo 主题"></a>安装 Hexo 主题</h2><p>指定文件夹目录下的 <code>theme</code> 文件夹下存放的就是博客的主题，Hexo 便是依据主题来生成静态文件的，挑选主题可以在 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方网站</a> 查找，根据自己的喜好来挑选。</p><p>下载主题的方式如下：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> your-hexo-site  <span class="comment">#eg: blog</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> &#123;主题链接&#125; themes/&#123;主题名称&#125;</span></span><br></pre></td></tr></table></figure><p>启用主题的方式也很简单</p><p>打开指定文件夹下 Hexo 的配置文件 <code>_config.yml</code>, Ctrl+F 搜索 <code>theme</code> 关键字，修改其主题名称为下载的主题名称即可。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: &#123;主题名称&#125;</span><br></pre></td></tr></table></figure><p>以本人使用的 NexT 主题为例：</p><h3 id="下载-NexT"><a href="#下载-NexT" class="headerlink" title="下载 NexT"></a>下载 NexT</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><h3 id="启用-NexT"><a href="#启用-NexT" class="headerlink" title="启用 NexT"></a>启用 NexT</h3><p>修改 Hexo 目录下的 <code>_config.yml</code></p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h3 id="验证主题是否安装成功"><a href="#验证主题是否安装成功" class="headerlink" title="验证主题是否安装成功"></a>验证主题是否安装成功</h3><p>启动 Hexo 本地站点，<strong>在服务启动的过程，注意观察命令行输出是否有任何异常信息。</strong></p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean <span class="comment"># 清除生成的静态资源</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s -d  <span class="comment"># hexo server -debug 的缩写</span></span></span><br></pre></td></tr></table></figure><p>当命令行输出中提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>此时即可使用浏览器访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，检查站点是否正确运行</p><p>当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse<br><img data-src="/images/hexo-next-finished.png" alt="博客首页"></p><p>现在，我们已经成功安装并启用了 NexT 主题。</p><p>关于更多基本操作和基础知识，请查阅 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 与 <a href="https://theme-next.org/" target="_blank" rel="noopener">NexT</a> 官方文档.</p><h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><h3 id="博客操作类"><a href="#博客操作类" class="headerlink" title="博客操作类"></a>博客操作类</h3><h4 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init [folder]</span></span><br></pre></td></tr></table></figure><h4 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp;&amp; hexo s -d</span></span><br></pre></td></tr></table></figure><h4 id="部署到-Github-Pages"><a href="#部署到-Github-Pages" class="headerlink" title="部署到 Github Pages"></a>部署到 Github Pages</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp;&amp; hexo g -d</span></span><br></pre></td></tr></table></figure><h3 id="文章操作类"><a href="#文章操作类" class="headerlink" title="文章操作类"></a>文章操作类</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new <span class="string">'postName'</span> <span class="comment">#新建文章</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page <span class="string">'pageName'</span> <span class="comment"># 新建页面</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将博客从 Jekyll 迁移到 Hexo，在迁移的过程中也遇到一些问题，下面就简单记录一下 &lt;span class=&quot;label info&quot;&gt;Hexo+NexT+Github Pages&lt;/span&gt; 的搭建步骤。 &lt;/p&gt;
&lt;p&gt;本章将从零开始，搭建一个 Hexo + NexT 的本地博客系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
      <category term="博客" scheme="http://leezhiy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://leezhiy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://leezhiy.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（七）装饰器模式</title>
    <link href="http://leezhiy.github.io/2018/07/16/2018-07-16-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%83%EF%BC%89%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/16/2018-07-16-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%83%EF%BC%89%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-15T16:44:57.000Z</published>
    <updated>2020-04-18T12:26:16.677Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是装饰器模式"><a href="#什么是装饰器模式" class="headerlink" title="什么是装饰器模式"></a>什么是装饰器模式</h3><p>定义：<strong>允许向一个现有对象添加新的功能，同时又不改变其结构</strong>，这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。</p><p>简单来说就是可以动态的添加修改类的功能</p><a id="more"></a><h3 id="为什么要使用装饰器模式"><a href="#为什么要使用装饰器模式" class="headerlink" title="为什么要使用装饰器模式"></a>为什么要使用装饰器模式</h3><p>如果一个类提供了一项功能，现在需要修改或者添加额外的功能，传统的编程模式是需要写个子类集成它，并重新实现类的方法。使用装饰模式仅需在运行时添加一个装饰器对象即可实现。<br>这种模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能中</p><h3 id="装饰器模式的优点"><a href="#装饰器模式的优点" class="headerlink" title="装饰器模式的优点"></a>装饰器模式的优点</h3><p>(1).我们可以保证类的层次不会因过多而发生混乱。</p><p>(2).当我们需求的修改很小时，不用改变原有的数据结构。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建渲染接口。</span></span><br><span class="line"><span class="comment">* 这里的装饰方法 renderData() 返回的是字符串格式数据。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">RenderableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderData</span><span class="params">()</span>: <span class="title">string</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建 Webservice 服务类实现 RenderableInterface。</span></span><br><span class="line"><span class="comment">* 该类将在后面为装饰者实现数据的输入。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Webservice</span> <span class="keyword">implements</span> <span class="title">RenderableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> $data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 传入字符串格式数据。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $data)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = $data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 实现 RenderableInterface 渲染接口中的 renderData() 方法。</span></span><br><span class="line"><span class="comment">    * 返回传入的数据。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderData</span><span class="params">()</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 装饰者必须实现渲染接口类 RenderableInterface 契约，这是该设计</span></span><br><span class="line"><span class="comment"> * 模式的关键点。否则，这将不是一个装饰者而只是一个自欺欺人的包</span></span><br><span class="line"><span class="comment"> * 装。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 创建抽象类 RendererDecorator （渲染器装饰者）实现渲染接口。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RendererDecorator</span> <span class="keyword">implements</span> <span class="title">RenderableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> RenderableInterface</span></span><br><span class="line"><span class="comment">     * 定义渲染接口变量。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> $wrapped;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> RenderableInterface $renderer</span></span><br><span class="line"><span class="comment">     * 传入渲染接口类对象 $renderer。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(RenderableInterface $renderer)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;wrapped = $renderer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建 Xml 修饰者并继承抽象类 RendererDecorator 。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XmlRenderer</span> <span class="keyword">extends</span> <span class="title">RendererDecorator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 对传入的渲染接口对象进行处理，生成 DOM 数据文件。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderData</span><span class="params">()</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $doc = <span class="keyword">new</span> \DOMDocument();</span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;wrapped-&gt;renderData();</span><br><span class="line">        $doc-&gt;appendChild($doc-&gt;createElement(<span class="string">'content'</span>, $data));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $doc-&gt;saveXML();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建 Json 修饰者并继承抽象类 RendererDecorator 。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonRenderer</span> <span class="keyword">extends</span> <span class="title">RendererDecorator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 对传入的渲染接口对象进行处理，生成 JSON 数据。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderData</span><span class="params">()</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> json_encode(<span class="keyword">$this</span>-&gt;wrapped-&gt;renderData());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line">$webServiceObject = <span class="keyword">new</span> Webservice(<span class="string">'foobar'</span>);</span><br><span class="line"><span class="comment">// 用 Json 装饰器装饰 webServiceObject</span></span><br><span class="line">$service = <span class="keyword">new</span> JsonRenderer($webServiceObject);</span><br><span class="line"><span class="comment">// 输出结果为 json_encode('foobar');后的结果</span></span><br><span class="line"><span class="keyword">echo</span> $service-&gt;renderData();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用 xml 装饰器装饰 webServiceObject;</span></span><br><span class="line">$service = <span class="keyword">new</span> XmlRenderer($webServiceObject);</span><br><span class="line"><span class="comment">// 输出结果为 xml 处理后的结果</span></span><br><span class="line"><span class="keyword">echo</span> $service-&gt;renderData();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是装饰器模式&quot;&gt;&lt;a href=&quot;#什么是装饰器模式&quot; class=&quot;headerlink&quot; title=&quot;什么是装饰器模式&quot;&gt;&lt;/a&gt;什么是装饰器模式&lt;/h3&gt;&lt;p&gt;定义：&lt;strong&gt;允许向一个现有对象添加新的功能，同时又不改变其结构&lt;/strong&gt;，这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。&lt;/p&gt;
&lt;p&gt;简单来说就是可以动态的添加修改类的功能&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（六）观察者模式</title>
    <link href="http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%85%AD%EF%BC%89%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%85%AD%EF%BC%89%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-15T12:38:22.000Z</published>
    <updated>2020-04-17T11:16:05.786Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是观察者模式"><a href="#什么是观察者模式" class="headerlink" title="什么是观察者模式"></a>什么是观察者模式</h3><p>从面向过程的角度来看,首先是<strong>观察者向主体注册，注册完之后，主体再通知观察者做出相应的操作</strong>，整个事情就完了</p><p>从面向对象的角度来看，主体提供对观察者管理的接口（注册，取消，通知），观察者提供自身操作的接口。（这些观察者拥有一个同一个的接口）观察者利用主体的接口向主体注册，而主体理由观察者接口通知观察者。耦合度相当之低。</p><a id="more"></a><h3 id="为什么要使用观察者模式"><a href="#为什么要使用观察者模式" class="headerlink" title="为什么要使用观察者模式"></a>为什么要使用观察者模式</h3><p>观察者模式更多体现了两个独立的类利用接口完成一件本应该很复杂的事情。不利用主体类的话，我们还需要不断循环创建实例，执行操作。而现在只需要创建实例就好，执行操作的事儿只需要调用一次通知的方法就好啦</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>当一个对象的发生改变时所有依赖于它的对象都需要得到通知并被自动更新，而且它不知道具体有多少对象有待通知，应该考虑使用观察者模式。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注： PHP 已经定义了 2 个接口用于快速实现观察者模式：SplObserver 和 SplSubject。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新闻报纸主体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Newspaper</span> <span class="keyword">implements</span> <span class="title">SplSubject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name;</span><br><span class="line">    <span class="keyword">private</span> $observers;</span><br><span class="line">    <span class="keyword">private</span> $content;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers = <span class="keyword">new</span> SplObjectStorage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attach</span><span class="params">(SplObserver $observer)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers-&gt;attach($observer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detach</span><span class="params">(SplObserver $observer)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers-&gt;detach($observer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notify</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;observers <span class="keyword">as</span> $observer) &#123;</span><br><span class="line">            $observer-&gt;update(<span class="keyword">$this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContent</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;content.<span class="string">"&#123;$this-&gt;name&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">breakOutNews</span><span class="params">($content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = $content;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读者观察者类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reader</span> <span class="keyword">implements</span> <span class="title">SplObserver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(SplSubject $subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name.<span class="string">' is reading breakout news'</span>.$subject-&gt;getContent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkFlow</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $newspaper = <span class="keyword">new</span> Newspaper(<span class="string">'New York Times'</span>);</span><br><span class="line">        $allen = <span class="keyword">new</span> Reader(<span class="string">"allen"</span>);</span><br><span class="line">        $jimmy = <span class="keyword">new</span> Reader(<span class="string">"jimmy"</span>);</span><br><span class="line">        $tom = <span class="keyword">new</span> Reader(<span class="string">"tom"</span>);</span><br><span class="line">        $newspaper-&gt;attach($allen);</span><br><span class="line">        $newspaper-&gt;attach($jimmy);</span><br><span class="line">        $newspaper-&gt;attach($tom);</span><br><span class="line">        $newspaper-&gt;detach($tom);</span><br><span class="line">        $newspaper-&gt;breakOutNews(<span class="string">'USA BREAK DOWN'</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$work = <span class="keyword">new</span> WorkFlow();</span><br><span class="line">$work-&gt;run();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是观察者模式&quot;&gt;&lt;a href=&quot;#什么是观察者模式&quot; class=&quot;headerlink&quot; title=&quot;什么是观察者模式&quot;&gt;&lt;/a&gt;什么是观察者模式&lt;/h3&gt;&lt;p&gt;从面向过程的角度来看,首先是&lt;strong&gt;观察者向主体注册，注册完之后，主体再通知观察者做出相应的操作&lt;/strong&gt;，整个事情就完了&lt;/p&gt;
&lt;p&gt;从面向对象的角度来看，主体提供对观察者管理的接口（注册，取消，通知），观察者提供自身操作的接口。（这些观察者拥有一个同一个的接口）观察者利用主体的接口向主体注册，而主体理由观察者接口通知观察者。耦合度相当之低。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（五）策略模式</title>
    <link href="http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BA%94%EF%BC%89%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BA%94%EF%BC%89%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-15T08:27:10.000Z</published>
    <updated>2020-04-17T11:16:05.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是适配器模式"><a href="#什么是适配器模式" class="headerlink" title="什么是适配器模式"></a>什么是适配器模式</h3><p>定义：将一组特定的行为和算法封装成类，以适应某些特定的上下文环境，并让它们可以相互替换，这种模式就是策略模式。</p><p>简单理解就是 <strong>有n个做法供你选择，根据你的需要选择某个策略得到结果</strong></p><a id="more"></a><h3 id="为什么要用策略模式"><a href="#为什么要用策略模式" class="headerlink" title="为什么要用策略模式"></a>为什么要用策略模式</h3><p>使用设计模式之后，我们的<strong>代码冗余和耦合度变低，每个策略模块完成对应的功能</strong>。</p><p>当然缺点就是一个功能我们就要响应制作一个策略类，但是我们统观MVC架构当中(ThinkPHP,Laravel)，一个控制器对应一个视图，其实也是策略设计模式的体现了。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h4><p>在一个电商网站中，根据用户的性别来展示不同的商品。我们有展示商品的类目（function showCategory()）和展示的广告（function showAd()）</p><h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>首先我们要定义一个接口，接口中定义需要实现的方法。</p><p>然后分别定义不同的类来实现接口中的方法。</p><p>最后在根据用户的不同，分别 new 不同的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 父类接口</span></span><br><span class="line"><span class="comment"> * Interface UserInterface</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">UserInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示广告</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showAd</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示分类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showCategory</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 男性用户实现展示接口</span></span><br><span class="line"><span class="comment"> * Class MaleUser</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaleUser</span> <span class="keyword">implements</span> <span class="title">UserInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示广告</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showAd</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"电子产品"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示分类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showCategory</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"电子数码"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 女性用户实现展示接口</span></span><br><span class="line"><span class="comment"> * Class FemaleUser</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FemaleUser</span> <span class="keyword">implements</span> <span class="title">UserInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示广告</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showAd</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"化妆品"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 展示分类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showCategory</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"服装分类"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'male'</span>]) &#123;</span><br><span class="line">    $user = <span class="keyword">new</span> MaleUser();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $user = <span class="keyword">new</span> FemaleUser();</span><br><span class="line">&#125;</span><br><span class="line">$user-&gt;showAd(); <span class="comment">// 根据用户性别展示各自的广告分类</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>总的来说，我们在开发中的设计原则如下：</p><p>(1).找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起</p><p>(2).针对接口编程，不针对实现编程</p><p>(3).多用组合，少用继承。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是适配器模式&quot;&gt;&lt;a href=&quot;#什么是适配器模式&quot; class=&quot;headerlink&quot; title=&quot;什么是适配器模式&quot;&gt;&lt;/a&gt;什么是适配器模式&lt;/h3&gt;&lt;p&gt;定义：将一组特定的行为和算法封装成类，以适应某些特定的上下文环境，并让它们可以相互替换，这种模式就是策略模式。&lt;/p&gt;
&lt;p&gt;简单理解就是 &lt;strong&gt;有n个做法供你选择，根据你的需要选择某个策略得到结果&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（四）适配器模式</title>
    <link href="http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%9B%9B%EF%BC%89%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%9B%9B%EF%BC%89%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-15T06:42:11.000Z</published>
    <updated>2020-04-17T11:16:05.867Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是适配器模式"><a href="#什么是适配器模式" class="headerlink" title="什么是适配器模式"></a>什么是适配器模式</h3><p>定义：把<strong>对某些相似的类的操作转化为一个统一的“接口”</strong> – 适配器</p><h3 id="适配器的特点"><a href="#适配器的特点" class="headerlink" title="适配器的特点"></a>适配器的特点</h3><p>适配器统一或者屏蔽那些类的细节。适配器模式还构造了一种“机制”，使“适配”的类很容易增减，而不用修改与之交互的代码，符合<strong>减少代码之间的耦合</strong>。</p><a id="more"></a><h3 id="什么时候要使用适配器"><a href="#什么时候要使用适配器" class="headerlink" title="什么时候要使用适配器"></a>什么时候要使用适配器</h3><p>主要应用于“<strong>希望复用一些现成的类，但接口又与复用环境不一样</strong>”的情况。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h4><p>黑枣玩具公司专门生产玩具，生产的玩具不限于狗、猫、狮子，鱼等动物。每个玩具都可以进行“张嘴”与“闭嘴”操作，分别调用了openMouth与closeMouth方法。</p><p>在这个时候，我们很容易想到可以第一定义一个抽象类Toy,甚至是接口Toy,这些问题不大，其他的类去继承父类，实现父类的方法。一片和谐，欣欣向荣。</p><h5 id="平衡的破坏"><a href="#平衡的破坏" class="headerlink" title="平衡的破坏"></a>平衡的破坏</h5><p>为了扩大业务，现在黑枣玩具公司与红枣遥控公司合作，红枣遥控公司可以使用遥控设备对动物进行嘴巴控制。不过红枣遥控公司的遥控设备是调用的动物的 doMouthOpen 及 doMouthClose 方法。黑枣玩具公司的程序员现在必须要做的是对Toy系列类进行升级改造，使Toy能调用 <strong>doMouthOpen</strong> 及 <strong>doMouthClose</strong> 方法。</p><p>考虑实现的方法时，我们很直接地想到，你需要的话我再在我的父类子类里给你添加这么两个方法就好啦。当你一次又一次在父类子类里面重复添加着这两个方法的时候，总会想着如此重复的工作，难道不能解决么？当有数百个子类的时候，程序员会改疯的。程序员往往比的是谁在不影响效率的时候更会“偷懒”。这样做下去程序员会觉得自己很傻。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Toy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为红枣遥控公司控制接口增加doMouthOpen方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为红枣遥控公司控制接口增加doMouthClose方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Toy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog open Mouth\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog open Mouth\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;doMouthOpen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Toy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat open Mouth\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat open Mouth\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;doMouthOpen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="更加烦躁"><a href="#更加烦躁" class="headerlink" title="更加烦躁"></a>更加烦躁</h5><p>程序员刚刚码完代码，喝了口水，突然间另一个消息传来。</p><p>黑枣玩具公司也要与绿枣遥控公司合作，因为绿枣遥控公司遥控设备更便宜稳定。不过绿枣遥控公司的遥控设备是调用的动物的 operateMouth(type) 方法来实现嘴巴控制。如果 operateMouth(type) 方法来实现嘴巴控制。如果type为0则“闭嘴”，反之张嘴。</p><p>这下好了，程序员又得对Toy及其子类进行升级，使Toy能调用 operateMouth() 方法。搁谁都不淡定了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//为绿枣遥控公司控制接口增加doMouthClose方法  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;doMouthOpen();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> ($type == <span class="number">0</span>) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;operateMouth();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;doMouthOpen();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> ($type == <span class="number">0</span>) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;operateMouth();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个时候，程序员必须要动脑子想办法了，就算自己勤快，万一哪天紫枣青枣黄枣山枣这些遥控公司全来的时候，忽略自己不断增多的工作量不说，这个Toy类可是越来越大，总有一天程序员不崩溃，系统也会崩溃。</p><h5 id="问题在出在哪里呢？"><a href="#问题在出在哪里呢？" class="headerlink" title="问题在出在哪里呢？"></a>问题在出在哪里呢？</h5><p>像上面那样编写代码，代码实现违反了 <strong>开-闭</strong> 原则，<strong>一个软件实体应该对拓展开放，对修改关闭</strong>。即<strong>在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被拓展</strong>，也就是每个实体都是一个小王国，你让我参与你的事情可以，但你不能修改我的内部，除非我的内部代码确实可以优化。</p><p>在这种想法下，我们懂得了如何去用继承，如何利用多态，甚至如何实现“<strong>高内聚，低耦合</strong>”。</p><p>回到这个问题，我们现在面临这么一个问题，新的接口方法我要实现，旧的接口（Toy抽象类）也不能动，那总归得有个解决方法吧。那就是引入一个新的类–我们本文的主角–适配器。 适配器要完成的功能很明确，引用现有接口的方法实现新的接口的方法。更像它名字描述的那样，你的接口不改的话，我就利用现有接口和你对接一下吧。</p><p>到此，解决方法已经呼之欲出了，下面贴上代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Dog close Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Toy</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat open Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">closeMouth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Cat close Mouth\n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//目标角色:红枣遥控公司  </span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">RedTarget</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//目标角色:绿枣遥控公司及  </span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">GreenTarget</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span></span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案一-：对象适配器"><a href="#解决方案一-：对象适配器" class="headerlink" title="解决方案一 ：对象适配器"></a>解决方案一 ：对象适配器</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象适配器 角色:红枣遥控公司  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RedAdapter</span> <span class="keyword">implements</span> <span class="title">RedTarget</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> $adaptee;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Toy $adaptee)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;adaptee = $adaptee;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//委派调用Adaptee的sampleMethod1方法  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;adaptee-&gt;openMouth();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;adaptee-&gt;closeMouth();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//对象适配器  角色:绿枣遥控公司  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreenAdapter</span> <span class="keyword">implements</span> <span class="title">GreenTarget</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> $adaptee;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Toy $adaptee)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;adaptee = $adaptee;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//委派调用Adaptee：GreenTarget的operateMouth方法  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> ($type) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;adaptee-&gt;openMouth();  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;adaptee-&gt;closeMouth();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testObjectDriver</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">         <span class="comment">//实例化一只狗玩具  </span></span><br><span class="line">        $adaptee_dog = <span class="keyword">new</span> Dog();  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"给狗套上红枣适配器\n"</span>;  </span><br><span class="line">        $adapter_red = <span class="keyword">new</span> RedAdapter($adaptee_dog);  </span><br><span class="line">        <span class="comment">//张嘴  </span></span><br><span class="line">        $adapter_red-&gt;doMouthOpen();  </span><br><span class="line">        <span class="comment">//闭嘴  </span></span><br><span class="line">        $adapter_red-&gt;doMouthClose();  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"给狗套上绿枣适配器\n"</span>;  </span><br><span class="line">        $adapter_green = <span class="keyword">new</span> GreenAdapter($adaptee_dog);  </span><br><span class="line">        <span class="comment">//张嘴  </span></span><br><span class="line">        $adapter_green-&gt;operateMouth(<span class="number">1</span>);  </span><br><span class="line">        <span class="comment">//闭嘴  </span></span><br><span class="line">        $adapter_green-&gt;operateMouth(<span class="number">0</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">$test = <span class="keyword">new</span> testObjectDriver();  </span><br><span class="line">$test-&gt;run();</span><br></pre></td></tr></table></figure><h4 id="解决方案一-：类适配器"><a href="#解决方案一-：类适配器" class="headerlink" title="解决方案一 ：类适配器"></a>解决方案一 ：类适配器</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 适配器除了对象适配器还有类适配器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类适配器 角色：红枣遥控公司 狗 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RedDogAdapter</span> <span class="keyword">extends</span> <span class="title">Dog</span> <span class="keyword">implements</span> <span class="title">RedTarget</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;openMouth();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类适配器 角色：红枣遥控公司 猫</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RedCatAdapter</span> <span class="keyword">extends</span> <span class="title">Cat</span> <span class="keyword">implements</span> <span class="title">RedTarget</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthOpen</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;openMouth();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doMouthClose</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;closeMouth();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类适配器 角色：绿枣遥控公司 狗 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreenDogAdapter</span> <span class="keyword">extends</span> <span class="title">Dog</span> <span class="keyword">implements</span> <span class="title">GreenTarget</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($type) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;openMouth();  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类适配器 角色：绿枣遥控公司 猫 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreenCatAdapter</span> <span class="keyword">extends</span> <span class="title">Cat</span> <span class="keyword">implements</span> <span class="title">GreenTarget</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operateMouth</span><span class="params">($type = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($type) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;openMouth();  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;closeMouth();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testClassDriver</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        $adapter_red_dog = <span class="keyword">new</span> RedDogAdapter();  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"给狗套上红枣适配器\n"</span>;  </span><br><span class="line">        <span class="comment">//张嘴  </span></span><br><span class="line">        $adapter_red_dog-&gt;doMouthOpen();  </span><br><span class="line">        <span class="comment">//闭嘴  </span></span><br><span class="line">        $adapter_red_dog-&gt;doMouthClose();  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"给狗套上绿枣适配器\n"</span>;  </span><br><span class="line">        $adapter_green_dog = <span class="keyword">new</span> GreenDogAdapter();  </span><br><span class="line">        <span class="comment">//张嘴  </span></span><br><span class="line">        $adapter_green_dog-&gt;operateMouth(<span class="number">1</span>);  </span><br><span class="line">        <span class="comment">//闭嘴  </span></span><br><span class="line">        $adapter_green_dog-&gt;operateMouth(<span class="number">0</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">$test = <span class="keyword">new</span> testClassDriver();  </span><br><span class="line">$test-&gt;run();</span><br></pre></td></tr></table></figure><p>最后的结果就是，Toy类及其子类在不改变自身的情况下，通过两种不同的适配器都实现了不同的接口。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><h5 id="【适配器模式流程】："><a href="#【适配器模式流程】：" class="headerlink" title="【适配器模式流程】："></a>【适配器模式流程】：</h5><p>(1).客户通过目标接口调用适配器的方法对适配器发出请求</p><p>(2). 适配器使用被适配者接口把请求转换成被适配者一个或多个调用接口</p><p>(3).客户接收到调用的结果，但并未察觉这一切是适配器在起转换作用。</p><h5 id="【常用情境】："><a href="#【常用情境】：" class="headerlink" title="【常用情境】："></a>【常用情境】：</h5><p>(1).<strong>系统需要使用现有的类，而此类的接口不符合系统的需要</strong>。</p><p>(2).想要<strong>建立一个可以重复使用的类</strong>，用于与一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作。这些源类不一定有很复杂的接口。</p><p>(3).（对对象适配器而言）在设计里，需要改变多个已有子类的接口，如果使用类的适配器模式，就要针对每一个子类做一个适配器，而这不太实际。</p><p>(4).Adapter模式主要应用于“<strong>希望复用一些现存的类，但是接口又与复用环境要求不一致的情况</strong>”，在遗留代码复用、类库迁移等方面非常有用。</p><p>(5).Adapter模式有对象适配器和类适配器两种形式的实现结构，但是类适配器采用“多继承”的实现方式，带来了不良的高耦合，所以一般不推荐使用。对象适配器采用“对象组合”的方式，更符合松耦合精神。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是适配器模式&quot;&gt;&lt;a href=&quot;#什么是适配器模式&quot; class=&quot;headerlink&quot; title=&quot;什么是适配器模式&quot;&gt;&lt;/a&gt;什么是适配器模式&lt;/h3&gt;&lt;p&gt;定义：把&lt;strong&gt;对某些相似的类的操作转化为一个统一的“接口”&lt;/strong&gt; – 适配器&lt;/p&gt;
&lt;h3 id=&quot;适配器的特点&quot;&gt;&lt;a href=&quot;#适配器的特点&quot; class=&quot;headerlink&quot; title=&quot;适配器的特点&quot;&gt;&lt;/a&gt;适配器的特点&lt;/h3&gt;&lt;p&gt;适配器统一或者屏蔽那些类的细节。适配器模式还构造了一种“机制”，使“适配”的类很容易增减，而不用修改与之交互的代码，符合&lt;strong&gt;减少代码之间的耦合&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（三）注册树模式</title>
    <link href="http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%89%EF%BC%89%E6%B3%A8%E5%86%8C%E6%A0%91%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%89%EF%BC%89%E6%B3%A8%E5%86%8C%E6%A0%91%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-15T03:49:32.000Z</published>
    <updated>2020-04-17T11:16:05.726Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是注册树模式"><a href="#什么是注册树模式" class="headerlink" title="什么是注册树模式"></a>什么是注册树模式</h3><p><strong>注册树模式通过将对象实例注册到全局对象树上，需要的时候将对象从全局对象树上取下来</strong>，就像小时候买糖葫芦一样，卖糖葫芦的将糖葫芦插到一个大的杆子上，人们买的时候就取下来，不同的是，注册树模式摘下来还会有，能摘很多次，糖葫芦摘一次就没了。</p><a id="more"></a><h3 id="为什么要使用注册树模式"><a href="#为什么要使用注册树模式" class="headerlink" title="为什么要使用注册树模式"></a>为什么要使用注册树模式</h3><p>前面说到的单例模式解决了在整个项目中创建唯一对象的问题，</p><p>工厂模式解决了不通过new解决实例对象的问题，考虑的是项目拓展与维护。</p><p>总得来说单例模式和工厂模式可以产生更加合理的对象，</p><p>那怎么方便统筹调用这些对象呢，这时候就用到了注册树模式，<strong>不管你是单例模式，工厂模式还是二者结合生成的对象，都给我统统注册到树上，用到某个对象的时候，直接从树上取下来就好</strong>。</p><h3 id="如何实现注册树"><a href="#如何实现注册树" class="headerlink" title="如何实现注册树"></a>如何实现注册树</h3><p>我们用“四个一”来记</p><p>(1).<strong>一个静态变量</strong>，用于将所有的对象<strong>插入到注册树上</strong>，而且这个注册树应该是一个二位数组。</p><p>(2).<strong>一个插入对象实例的方法</strong>（set()）。</p><p>(3).<strong>一个撤销对象实例的方法</strong>（__unset()）。</p><p>(4).<strong>一个获取对象实例的方法</strong>（get()）。</p><p>拥有这些，我们就可以愉快的完成注册树模式了。</p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class MysqlFactory 工厂类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySQLFactory</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">factory</span><span class="params">($className)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $className;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Interface Mysql MySQL约束接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MySQL</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class Mysqli mysqli连接 实现方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysqli</span> <span class="keyword">implements</span> <span class="title">MySQL</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'mysqli is connected'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class PDO PDO连接 实现方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PDO</span> <span class="keyword">implements</span> <span class="title">MySQL</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'PDO is connected'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@purpose</span>: 创建一个注册树模式</span></span><br><span class="line"><span class="comment"> * Class Register</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 将所有的对象“插入”到注册树上</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">protected</span> $objects;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($alias, $object)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">self</span>::$objects[$alias] = $object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span><span class="params">($alias)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">self</span>::$objects[$alias]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($alias)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$objects[$alias];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Register::set(<span class="string">'SingleMysqlPDO'</span>, MySQLFactory::factory(<span class="string">'PDO'</span>));</span><br><span class="line"></span><br><span class="line">$single = Register::get(<span class="string">'SingleMysqlPDO'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是注册树模式&quot;&gt;&lt;a href=&quot;#什么是注册树模式&quot; class=&quot;headerlink&quot; title=&quot;什么是注册树模式&quot;&gt;&lt;/a&gt;什么是注册树模式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注册树模式通过将对象实例注册到全局对象树上，需要的时候将对象从全局对象树上取下来&lt;/strong&gt;，就像小时候买糖葫芦一样，卖糖葫芦的将糖葫芦插到一个大的杆子上，人们买的时候就取下来，不同的是，注册树模式摘下来还会有，能摘很多次，糖葫芦摘一次就没了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（二）工厂模式</title>
    <link href="http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/15/2018-07-15-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-14T16:35:07.000Z</published>
    <updated>2020-04-17T11:16:05.992Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是工厂模式"><a href="#什么是工厂模式" class="headerlink" title="什么是工厂模式"></a>什么是工厂模式</h3><p>定义：<strong>工厂模式是指根据不同的参数生成不同的类实例。一个类通过本身的静态方法来实例化一个类并返回一个实例对象</strong>。</p><a id="more"></a><h3 id="工厂模式的特点"><a href="#工厂模式的特点" class="headerlink" title="工厂模式的特点"></a>工厂模式的特点</h3><p>类命名特点：nameFactory eg: class MysqlFactory {} 【这是为了规范，当然也可以起其他任意名字】</p><p>静态方法名称： <strong>static</strong> public function factory($classname){} 【<strong>静态方法是类与外界的接口</strong>，返回的是一个对象】</p><h3 id="为什么要使用工厂模式"><a href="#为什么要使用工厂模式" class="headerlink" title="为什么要使用工厂模式"></a>为什么要使用工厂模式</h3><p><strong>减少代码进行复制粘贴，强耦合关系，牵一发动其他代码</strong>，比如在项目中很多地方实例化某个类，现在突然发现<strong>类名不适合或者类中需要添加构造函数参数</strong>，难不成需要一个一个改？</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>如果已经使用的类内部发生改变，那不需要在所有的地方都改变，只需要在类工厂类里做改变即可，比如连接数据库，可以使用MySQL、mysqli、PDO；根据不同参数配置使用不同的数据库操作类</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>(1).做支付接口的时候，未来可能应对不同的支付网关：支付宝、财付通、网银在线等。以后加一个支付方式，要使用哪一种支付方式，改一下参数即可。</p><p>(2).做成接口形式，让所有子类都要实现它的接口</p><p>(3).系统对接多个不同的数据库，MySQL、Oracle、SQLServer</p><h3 id="工厂模式解决的问题"><a href="#工厂模式解决的问题" class="headerlink" title="工厂模式解决的问题"></a>工厂模式解决的问题</h3><p>工厂模式更多考虑的是<strong>拓展维护</strong>的问题，如何不通过 new 建立实例对象的方法，单例模式和工厂模式可以产生更加合理的对象。</p><h3 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class MysqlFactory 工厂类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySQLFactory</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">factory</span><span class="params">($className)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> $className;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Interface Mysql MySQL约束接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MySQL</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class Mysqli mysqli连接 实现方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysqli</span> <span class="keyword">implements</span> <span class="title">MySQL</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'mysqli is connected'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class PDO PDO连接 实现方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PDO</span> <span class="keyword">implements</span> <span class="title">MySQL</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'PDO is connected'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用工厂实例化 PDO 类</span></span><br><span class="line">MySQLFactory::factory(<span class="string">'PDO'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用工厂实例化 Mysqli 类</span></span><br><span class="line">MySQLFactory::factory(<span class="string">'Mysqli'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是工厂模式&quot;&gt;&lt;a href=&quot;#什么是工厂模式&quot; class=&quot;headerlink&quot; title=&quot;什么是工厂模式&quot;&gt;&lt;/a&gt;什么是工厂模式&lt;/h3&gt;&lt;p&gt;定义：&lt;strong&gt;工厂模式是指根据不同的参数生成不同的类实例。一个类通过本身的静态方法来实例化一个类并返回一个实例对象&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>php 设计模式（一）单例模式与多例模式</title>
    <link href="http://leezhiy.github.io/2018/07/14/2018-07-14-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%A4%9A%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://leezhiy.github.io/2018/07/14/2018-07-14-PHP%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%A4%9A%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2018-07-14T15:22:27.000Z</published>
    <updated>2020-04-17T11:16:05.410Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>定义：简单来说，整个应用中只有一个实例对象的设计模式被称之为单例模式，而多例模式是指存在一个类有多个相同实例，而且该实例都是该类本身。这个类叫做多例类。 </p><p>注：<strong>多例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用“依赖注入模式”</strong>。</p><a id="more"></a><h3 id="单例模式与多例模式的要点"><a href="#单例模式与多例模式的要点" class="headerlink" title="单例模式与多例模式的要点"></a>单例模式与多例模式的要点</h3><p>多例模式实际上就是单例模式的推广。</p><h4 id="单例模式与多例模式的相同点："><a href="#单例模式与多例模式的相同点：" class="headerlink" title="单例模式与多例模式的相同点："></a>单例模式与多例模式的相同点：</h4><p>构造函数都需要外部不可访问，一般来说标记为 private （防止外部代码使用 new 操作符创建对象），单例类与多例类不能在其他类中实例化，只能被其自身实例化；</p><p>拥有一个保存类的实例的静态变量</p><p>拥有一个访问这个实例的公共静态方法 （常用 getInstance() 方法进行实例化类，通过比较操作符可以检测到类是否已被实例化）</p><h4 id="单例模式与多例模式的不同点："><a href="#单例模式与多例模式的不同点：" class="headerlink" title="单例模式与多例模式的不同点："></a>单例模式与多例模式的不同点：</h4><p>多例类可以有多个实例而单例类只有一个。</p><h5 id="简单的记为四私一公"><a href="#简单的记为四私一公" class="headerlink" title="简单的记为四私一公"></a>简单的记为四私一公</h5><p>(1).私有的静态属性（private static $instance），用来储存生成的对象</p><p>(2).私有的构造函数（private function __construct()）</p><p>(3).私有的克隆函数（private function __clone()），防止外部克隆对象</p><p>(4).私有的反序列化函数（private function __wakeup()），防止实例被序列化</p><p>(5).公共的静态方法（public static function getInstance()），用来访问静态属性储存的对象，如果没有对象，则生成此单例</p><p>(6).关键字 instanceof，检查次变量是否为该类的对象，子类，或者是实现接口。</p><h3 id="为什么要使用单例模式"><a href="#为什么要使用单例模式" class="headerlink" title="为什么要使用单例模式"></a>为什么要使用单例模式</h3><p>php的应用主要在于数据库应用，所以一个应用中会存在大量的数据库操作，使用单例模式，则可以避免大量的 new 操作消耗的资源。</p><p>如果一个系统中需要有一个类来全局控制某些配置信息，那么使用单例模式会很方便的实现</p><p>在一次页面请求中，为了便于进行调试，因为所有的代码（例如数据库操作类DB）都集中在一个类中，我们可以<strong>在类中设置钩子，输出日志</strong>，从而避免到处 var_dump echo。</p><h3 id="单例模式解决的问题"><a href="#单例模式解决的问题" class="headerlink" title="单例模式解决的问题"></a>单例模式解决的问题</h3><p>单例模式解决的是<strong>如何在整个项目中创建唯一的对象实例</strong>的问题，单例模式和工厂模式可以产生更加合理的对象。</p><h3 id="多例模式使用场景"><a href="#多例模式使用场景" class="headerlink" title="多例模式使用场景"></a>多例模式使用场景</h3><p>2 个数据库连接器，比如一个是 MySQL ，另一个是 SQLite</p><p>多个记录器（一个用于记录调试消息，一个用于记录错误）</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建一个单例类</span></span><br><span class="line"><span class="comment"> * Class single</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Object 保存类实例的静态成员变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">private</span> $instance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Single constructor.  不允许从外部调用以防止创建多个实例</span></span><br><span class="line"><span class="comment">     * 要使用单例，必须通过 Singleton::getInstance() 方法获取实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Object|Single 通过懒加载获得实例（在第一次使用的时候创建）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span> : <span class="title">Singleton</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> === <span class="keyword">static</span>::$instance) &#123;</span><br><span class="line">            <span class="keyword">static</span>::$instance = <span class="keyword">new</span> <span class="keyword">static</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@purpose</span>: 防止实例被克隆（这会创建实例的副本）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@purpose</span>: 防止反序列化（这将创建它的副本）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多例模式"><a href="#多例模式" class="headerlink" title="多例模式"></a>多例模式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Multiton</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> INSTANCE_1 = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">const</span> INSTANCE_2 = <span class="string">'2'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 实例数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $instances = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里私有方法阻止用户随意的创建该对象实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">(string $instanceName)</span>: <span class="title">Multiton</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="keyword">self</span>::$instances[$instanceName])) &#123;</span><br><span class="line">            <span class="keyword">self</span>::$instances[$instanceName] = <span class="keyword">new</span> <span class="keyword">self</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$instances[$instanceName];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该私有对象阻止实例被克隆</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该私有方法阻止实例被序列化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;定义：简单来说，整个应用中只有一个实例对象的设计模式被称之为单例模式，而多例模式是指存在一个类有多个相同实例，而且该实例都是该类本身。这个类叫做多例类。 &lt;/p&gt;
&lt;p&gt;注：&lt;strong&gt;多例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用“依赖注入模式”&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/categories/PHP/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="面试问题" scheme="http://leezhiy.github.io/tags/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
      <category term="设计模式" scheme="http://leezhiy.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>利用php数组函数进行函数式编程</title>
    <link href="http://leezhiy.github.io/2017/08/11/2017-08-11-%E5%88%A9%E7%94%A8php%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>http://leezhiy.github.io/2017/08/11/2017-08-11-%E5%88%A9%E7%94%A8php%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</id>
    <published>2017-08-10T16:00:00.000Z</published>
    <updated>2020-04-20T15:23:16.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h3><p>因为一个BUG， 我在一个摇摇欲坠，几乎碰一下就会散架的项目中某一个角落中发现下面这样一段代码</p><a id="more"></a><p><img data-src="/images/php_function/php_function.png" alt=""></p><p>这段程序与那个BUG有密切的关系。 我来回反复的捉摸这段代码， 发现这段代码实现了两个功能</p><p>第一个是在一个从数据库中读取的列表数组中找出某个值是最大的一条记录， 并且把这个最大的值和跟这个值相关的时间给取出来。</p><p>第二个比较复杂 ，是将这个列表数组中的值映射到另外一个列表数组中， 可以把这个过程看作是SQL中的JOIN操作， 只是JOIN的条件异常复杂 ，在这里我也不详述了，阅读的同学也不必去深入探究。</p><p>就这段代码来说， 很难通过大致观察就理解代码的意思 ， 代码之中光循环就套了3层, 而且还有多处复杂的条件判断，代码格式混乱，连编码的底线缩进都没有满足。 可悲的是这种类型的代码广泛存在于全球范围内无数Web服务器之上， 每天运行着。</p><p>在很久以前， 那会我还很年轻， 看到项目中哪个地方代码有问题，我就难受， 必须改掉它。 后来我发现， 烂代码就像地沟油， 在我所生活的城市， 到哪里都能碰的到， 除非不吃饭， 否则就只能睁一只眼闭一只眼，只要不是味道有问题， 吃也就吃了。</p><p>然而，这次却不一样， 这段代码运行在某个功能项的关键部位， 不透彻的理解清晰这段代码， 以后出现问题还是会被卡在这里。虽然现在我理解了这段代码的意思 ，但过些天回过头来， 我又会忘掉这段代码所表达的意义。这并不是我的记忆力问题的， 而是因为这段代码所表达的意途不够清晰。</p><p>于是我把代码重构成了下面这个样子， 代码本身的功能并没有变化</p><p><img data-src="/images/php_function/php_function_2.png" alt=""></p><p>是不是还是看不明白代码所表达的意思？ 没关系， 因为这段代码所表示的功能太过于复杂 ，而且还依赖于代码所有的整个函数的上下文， 因此无法理解也无可厚非。 但是从代码结构上来看， 重构后的代码的却清晰了不少。</p><p>我将原本拥挤在一起的两个功能进行了拆分， 上面部份是求最大值， 下面部份是对两个数组进行映射。 这里我用到了两个PHP中数组的函数 array_map和array_reduce， 这篇文章想表达的主线思路就是利用此类函数来提高PHP代码的可读性。 这类函数主要包括以下4个函数</p><p>array_filter</p><p>array_map</p><p>array_walk</p><p>array_reduce</p><p>这4个函数威力巨大， 在处理列表数组方面可以完全替换掉for、foreach、while这些循环控制语句， 这也是函数式编程方式在PHP的一部份体现。</p><h3 id="1-array-filter函数"><a href="#1-array-filter函数" class="headerlink" title="1.array_filter函数"></a>1.array_filter函数</h3><p><img data-src="/images/php_function/php_function_3.png" alt=""></p><p>这段代码比较好理解，将数组中性别字段为女的数据项提取出来。 整段代码的逻辑大致如下</p><p>1.定义result数组， 用来存放结果</p><p>2.循环数组， 对每一个数据项进行条件判断， 查看其中的性别字段是否为女</p><p>3.如符合条件则放入result数组中</p><p>这是原汁原味的命令式程序代码。</p><p>如果data变量中的数据并非存放于php数组中， 而是存在于关系数库的表之中， 那何取得性别为女的数据结果呢？ 对于程序员来说这貌似是一个更加简单的问题，一句SQL语句就搞定了</p><p><img data-src="/images/php_function/php_function_4.png" alt=""></p><p>显然， 利用SQL查询数据更加方便，意途也更加清晰，毕间一个SQL表达 式就将所有的程序逻辑都给表达了现来。这句SQL只表达了：“我需要性别为女的数据，至于怎么拿， 我不管 ”， 除了结果 ， 其它的它一概不知。</p><p>我们不妨把这种思路引入到PHP程序设计之中，不也意味着我们的PHP程序的逻辑表达也更加清晰，代码的可读性也更高的。所幸， 这种利用表达式编程的方法在PHP中也完全可以实现。</p><p><img data-src="/images/php_function/php_function_5.png" alt=""></p><p>利用array_filter函数，可以轻松的完成这个任务， 仔细观察一下， 是不是原来的程序逻辑都不见了，包括定义数组、循环、条件判断这些都不见了，逻辑方面是只剩下了一个性别比较语句，这对于代码所实现的功能一目了然。 和上面的SQL比较一下， 这里的性别判断语句就是SQL中where子句后面的条件判断， 而array_filter函数其实就是SQL中的where子句。 这就是SQL语句面向结果编程的逻辑原封不变的在PHP中的体现，也就是时下最流行的“声明性编程”或者也称为“表达式编程”。</p><p>此外， 代码中性别判断语句所在的位置称之为lambda表达式， 更通俗一些的叫法是匿名函数。不难看出， 在SQL的where条件中编写条件判断远不如在匿名函数中写PHP代码来的灵活,在where条件中只能执行or和and逻辑，而在php匿名函数中可以随便怎么写，只要函数的返回值是个布尔值就可以了，这也是php声明性编程优于SQL声明性编程的地方。</p><h3 id="2-array-map函数"><a href="#2-array-map函数" class="headerlink" title="2.array_map函数"></a>2.array_map函数</h3><p>再来看一个例子</p><p><img data-src="/images/php_function/php_function_6.png" alt=""></p><p>数据中的性别字段是中文的，值也是中文的， 现在想把字段名和字段值都改为英文的, 就可以用上面这段代码实现， 至于实现的逻辑这里不赘述了。</p><p>下面是利用SQL的实现方式</p><p><img data-src="/images/php_function/php_function_7.png" alt=""></p><p>SQL中case when语句好像不太好看， 但是不影响整体逻辑的表达。 将这段SQL转换成PHP的方式实现</p><p><img data-src="/images/php_function/php_function_8.png" alt=""></p><p>相比之前的PHP实现， 是不是简洁明了了许多。</p><p>在这里使用到了 array_map函数 。 在SQL语句中以select语句最为常用， select的字面意思是“选择”，而select语句也被称之为选择查询， 事实上从关系数据库的角度来说，select被称之为“投影”， 并不是查询什么的。 换言之， select 语句只是将SQL的查询结果以一定的方式（选字段、计算值等等）提取出来了。 php中的array_map表达的也是这层意思， “映射”与“投影”完全是一种意思的不同表达。</p><h3 id="3-array-walk函数"><a href="#3-array-walk函数" class="headerlink" title="3.array_walk函数"></a>3.array_walk函数</h3><p>array_walk函数没有像 array_map和array_filter这样深刻的意义， 但是它在设计可读性良好的代码时也是不可或缺的。</p><p>array_walk是for或foreach语句的替代函数</p><p><img data-src="/images/php_function/php_function_9.png" alt=""></p><p>以上代码分别是 foreach和array_walk对于遍历数组的实现方式。 看起来， 好像array_walk的实现方式更加复杂， 但是在更深层次的语义方面</p><p>foreach表达的是循环遍历， 但是在这个循环的过程中，要做什么样的处理，是没有任何约束的， 删除被遍历的数组的某一项 ，或者修改一个十万八千里以外的变量的值，这便是所谓的“代码副作用”，俗话说“白蚁虽小， 危害无穷”， 当这些看似微不足道的副作用发展壮大时， 便会给程序员维护程序代码带来的障碍是致命的。</p><p>而array_walk函数缺省情况下所有执行代码的作用域都在匿名函数内，如果要依赖或操作函数之外的数据， 必须通过匿名函数的use关键字导入。通俗一点的请， array_walk函数的权限不如foreach来的大， 因此，使用array_walk函数后，虽然无法让你随心所欲的编程，但是大限度的减少了你代码的副作用，两相权衡array_walk所带来的好处还是有值得使用它的理由的。 首先， 大多数时候写代码根本不需要太大的“权限”，其次， 把代码所影响的范围控制到最小好处不言而喻。微信张小龙讲过，微信做的最好的一点便是“克制”，我们写代码又何尝不是。这一点array_filter和array_map中也有体现， 宽泛的讲，所有使用匿名函数的地方都能享受到这个好处。</p><p>array_walk所表达的语义就是“假如你需要用到我， 那么你除了遍历以外，其它的事情最好都别干，否则你还是去用原生的foreach吧”</p><h3 id="4-array-reduce函数"><a href="#4-array-reduce函数" class="headerlink" title="4.array_reduce函数"></a>4.array_reduce函数</h3><p>array_reduce是上面所讲的三个函数的集大成者，这三个函数的底层完全可以由array_reduce实现。</p><p>先看一下下面的php代码</p><p><img data-src="/images/php_function/php_function_10.png" alt=""></p><p>常规的PHP写法，代码分别用于计算数组记录中平均年龄和最大年龄，代码需要循环数组，并把计算结果存入一个标量（单个值，区分于列表变量）。</p><p>假如要以表达式编程的方式完成编写这两个功能， 利用array_filter、 array_walk、array_map三个函数是很难一部到位的实现的。</p><p>于是， 就到了array_reduce大显身手的时候了</p><p><img data-src="/images/php_function/php_function_11.png" alt=""></p><p>上面的代码是求平均年龄和最大年龄的表达式编程的实现，如果对array_reduce函数的工作机制不了解，看上面两段代码会觉得在看天书。</p><p><img data-src="/images/php_function/php_function_12.png" alt=""></p><p>这是 array_reduce函数的实现代码，函数有3个参数， 3个参数的作用分别是</p><p>第一个参数$data， 就要是处理的数据源</p><p>第二个参数$callback，循环遍历时会被调用的函数，函数返回的结果在下一次循环调用时会被再次当成参数传入。</p><p>第三个参数$initial，作为$callback函数被初次调用时的参数传递</p><p>再来一个递归版本的array_reduce实现，帮助更好的理解这个函数的使用意义</p><p><img data-src="/images/php_function/php_function_13.png" alt=""></p><p>善用array_reduce函数几乎可以替换掉绝大多数需要使用foreach、for、while语句的代码。</p><p>在标准的函数式编程语言中， 是没有循环控制语句的，假如要进循环计算， 都是使用此类函数来实现的， 如果某些极端的情况下这些函数无法满足需求，那么就以手动写递归来实现循环， 以达到表达式编程的目的。</p><p>总结一下， 为什么要在写php代码时使用这4个函数</p><p>1.通过函数本身的意义就能表达出代码实现了什么样的功能，而不用去琢磨代码具体细节来理解代码的作用</p><p>2.表达式编程相对于命令式编程能极大的简化功能的实现过程， 提升编码效率</p><p>3.表达式编程对于代码的可读性、可维护性具有非凡的意义</p><p>4.利用匿名函数控制代码的副作用</p><p>5.由传统的面向过程式程序设计向现代化的函数式编程靠拢</p><p>补充：</p><p>通过前面示例的讲解， 利用这4个函数实现的代码相对于传统的实现方式并没有不可思议的变化， 然而， 当需要解决的问题复杂到一定程度时， 合理利用这4个函数会使代码的复杂性大规模下降。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h3&gt;&lt;p&gt;因为一个BUG， 我在一个摇摇欲坠，几乎碰一下就会散架的项目中某一个角落中发现下面这样一段代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://leezhiy.github.io/tags/PHP/"/>
    
      <category term="编程思想" scheme="http://leezhiy.github.io/tags/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
      <category term="函数式编程" scheme="http://leezhiy.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>vim 学习教程</title>
    <link href="http://leezhiy.github.io/2016/09/04/2016-09-04-vim-%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B/"/>
    <id>http://leezhiy.github.io/2016/09/04/2016-09-04-vim-%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B/</id>
    <published>2016-09-04T07:37:36.000Z</published>
    <updated>2020-04-21T11:17:14.025Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>下面的文章翻译自 <a href="http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/" target="_blank" rel="noopener">《Learn Vim Progressively》</a></p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>你想以最快的速度学习人类史上最好的文本编辑器VIM吗？你先得懂得如何在VIM幸存下来，然后一点一点地学习各种戏法。</p><p><a href="http://www.vim.org/" target="_blank" rel="noopener">Vim</a> the Six Billion Dollar editor</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Better, Stronger, Faster.</span><br></pre></td></tr></table></figure><p>学习 <a href="http://www.vim.org/" target="_blank" rel="noopener">vim</a> 并且其会成为你最后一个使用的文本编辑器。没有比这个更好的文本编辑器了，非常地难学，但是却不可思议地好用。</p><p>我建议下面这四个步骤：</p><ol><li><p>存活</p></li><li><p>感觉良好</p></li><li><p>觉得更好，更强，更快</p></li><li><p>使用VIM的超能力</p></li></ol><p>当你走完这篇文章，你会成为一个vim的 superstar。</p><p>在开始学习以前，我需要给你一些警告：</p><ul><li><p>学习vim在开始时是痛苦的。</p></li><li><p>需要时间</p></li><li><p>需要不断地练习，就像你学习一个乐器一样。</p></li><li><p>不要期望你能在3天内把vim练得比别的编辑器更有效率。</p></li><li><p>事实上，你需要2周时间的苦练，而不是3天。</p></li></ul><h3 id="第一级-–-存活"><a href="#第一级-–-存活" class="headerlink" title="第一级 – 存活"></a>第一级 – 存活</h3><ol><li><p>安装 <a href="http://www.vim.org/" target="_blank" rel="noopener">vim</a></p></li><li><p>启动 vim</p></li><li><p>什么也别干！请先阅读</p></li></ol><p>当你安装好一个编辑器后，你一定会想在其中输入点什么东西，然后看看这个编辑器是什么样子。但vim不是这样的，请按照下面的命令操作：</p><ul><li><p>启动Vim后，vim在 Normal 模式下。</p></li><li><p>让我们进入 Insert 模式，请按下键 i 。(陈皓注：你会看到vim左下角有一个–insert–字样，表示，你可以以插入的方式输入了）</p></li><li><p>此时，你可以输入文本了，就像你用“记事本”一样。</p></li><li><p>如果你想返回 Normal 模式，请按 <code>ESC</code> 键。</p></li></ul><p>现在，你知道如何在 Insert 和 Normal 模式下切换了。下面是一些命令，可以让你在 Normal 模式下幸存下来：</p><div class="note success">            <p>i → Insert 模式，按 ESC 回到 Normal 模式.</p><p>x → 删当前光标所在的一个字符。</p><p>:wq → 存盘 + 退出 (:w 存盘, :q 退出)   （陈皓注：:w 后可以跟文件名）</p><p>dd → 删除当前行，并把删除的行存到剪贴板里</p><p>p → 粘贴剪贴板</p><p>推荐:</p><p>hjkl (强例推荐使用其移动光标，但不必需) →你也可以使用光标键 (←↓↑→). 注: j 就像下箭头。</p><p>:help <command> → 显示相关命令的帮助。你也可以就输入 :help 而不跟命令。（陈皓注：退出帮助需要输入:q）</p>          </div><p>你能在vim幸存下来只需要上述的那5个命令，你就可以编辑文本了，你一定要把这些命令练成一种下意识的状态。于是你就可以开始进阶到第二级了。</p><p>当是，在你进入第二级时，需要再说一下 Normal 模式。在一般的编辑器下，当你需要copy一段文字的时候，你需要使用 <code>Ctrl</code> 键，比如：<code>Ctrl+C</code>。也就是说，Ctrl键就好像功能键一样，当你按下了功能键 Ctrl 后，C 就不在是 C 了，而且就是一个命令或是一个快键键了，在 VIM 的 Normal 模式下，所有的键就是功能键了。这个你需要知道。</p><p>标记:</p><p>下面的文字中，如果是 <code>Ctrl+λ</code> 我会写成 <code>&lt;C+λ&gt;</code>.</p><p>以 : 开始的命令你需要输入 <code>&lt;enter&gt;</code> 回车，例如 — 如果我写成 <code>:q</code> 也就是说你要输入 <code>:q&lt;enter&gt;</code>.</p><h3 id="第二级-–-感觉良好"><a href="#第二级-–-感觉良好" class="headerlink" title="第二级 – 感觉良好"></a>第二级 – 感觉良好</h3><p>上面的那些命令只能让你存活下来，现在是时候学习一些更多的命令了，下面是我的建议：（陈皓注：所有的命令都需要在Normal模式下使用，如果你不知道现在在什么样的模式，你就狂按几次ESC键）</p><ol><li><p>各种插入模式</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a → 在光标后插入</span><br><span class="line"></span><br><span class="line">o → 在当前行后插入一个新行</span><br><span class="line"></span><br><span class="line">O → 在当前行前插入一个新行</span><br><span class="line"></span><br><span class="line">cw → 替换从光标所在位置后到一个单词结尾的字符</span><br></pre></td></tr></table></figure></li><li><p>简单的移动光标</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0 → 数字零，到行头</span><br><span class="line"></span><br><span class="line">^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> → 到本行行尾</span></span><br><span class="line"></span><br><span class="line">g_ → 到本行最后一个不是blank字符的位置。</span><br><span class="line"></span><br><span class="line">/pattern → 搜索 pattern 的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）</span><br></pre></td></tr></table></figure></li><li><p>拷贝/粘贴 （陈皓注：p/P都可以，p是表示在当前位置之后，P表示在当前位置之前）</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P → 粘贴</span><br><span class="line"></span><br><span class="line">yy → 拷贝当前行当行于 ddP</span><br></pre></td></tr></table></figure></li><li><p>Undo/Redo</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u → undo</span><br><span class="line"></span><br><span class="line">&lt;C+r&gt; → redo</span><br></pre></td></tr></table></figure></li><li><p>打开/保存/退出/改变文件(Buffer)</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">:e &lt;path/to/file&gt; → 打开一个文件</span><br><span class="line"></span><br><span class="line">:w → 存盘</span><br><span class="line"></span><br><span class="line">:saveas &lt;path/to/file&gt; → 另存为 &lt;path/to/file&gt;</span><br><span class="line"></span><br><span class="line">:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ不需要输入冒号并回车)</span><br><span class="line"></span><br><span class="line">:q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。</span><br><span class="line"></span><br><span class="line">:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n到下一个文件）</span><br></pre></td></tr></table></figure></li></ol><p>花点时间熟悉一下上面的命令，一旦你掌握他们了，你就几乎可以干其它编辑器都能干的事了。但是到现在为止，你还是觉得使用vim还是有点笨拙，不过没关系，你可以进阶到第三级了。</p><h3 id="第三级-–-更好，更强，更快"><a href="#第三级-–-更好，更强，更快" class="headerlink" title="第三级 – 更好，更强，更快"></a>第三级 – 更好，更强，更快</h3><p>先恭喜你！你干的很不错。我们可以开始一些更为有趣的事了。在第三级，我们只谈那些和vi可以兼容的命令。</p><h4 id="更好"><a href="#更好" class="headerlink" title="更好"></a>更好</h4><p>下面，让我们看一下vim是怎么重复自己的：</p><ol><li><p>. → (小数点) 可以重复上一次的命令</p></li><li><p>N<command> → 重复某个命令N次</p></li></ol><p>下面是一个示例，找开一个文件你可以试试下面的命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2dd → 删除2行</span><br><span class="line"></span><br><span class="line">3p → 粘贴文本3次</span><br><span class="line"></span><br><span class="line">100idesu [ESC] → 会写下 “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu “</span><br><span class="line"></span><br><span class="line">. → 重复上一个命令—— 100 “desu “.</span><br><span class="line"></span><br><span class="line">3. → 重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).</span><br></pre></td></tr></table></figure><h4 id="更强"><a href="#更强" class="headerlink" title="更强"></a>更强</h4><p>你要让你的光标移动更有效率，你一定要了解下面的这些命令，千万别跳过。</p><ol><li><p>NG → 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）</p></li><li><p>gg → 到第一行。（陈皓注：相当于1G，或 :1）</p></li><li><p>G → 到最后一行。</p></li><li><p>按单词移动：</p><blockquote><p>如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（陈皓注：程序变量）</p></blockquote><blockquote><p>如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（陈皓注：程序语句）</p></blockquote></li></ol><p><img data-src="/images/vim-word-moves-example.png" alt=" Word moves example"></p><ol><li><p>w → 到下一个单词的开头。</p></li><li><p>e → 到下一个单词的结尾。</p></li></ol><p>下面，让我来说说最强的光标移动：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash"> : 匹配括号移动，包括 (, &#123;, [. （陈皓注：你需要把光标先移到括号上）</span></span><br><span class="line"></span><br><span class="line">* 和 #:  匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）</span><br></pre></td></tr></table></figure><p>相信我，上面这三个命令对程序员来说是相当强大的。</p><h4 id="更快"><a href="#更快" class="headerlink" title="更快"></a>更快</h4><p>你一定要记住光标的移动，因为很多命令都可以和这些移动光标的命令连动。很多命令都可以如下来干：</p><p><code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></p><p>例如 0y$ 命令意味着：</p><ul><li><p>0 → 先到行头</p></li><li><p>y → 从这里开始拷贝</p></li><li><p>$ → 拷贝到本行最后一个字符</p></li></ul><p>你可可以输入 <code>ye</code>，从当前位置拷贝到本单词的最后一个字符。</p><p>你也可以输入 <code>y2/foo</code> 来拷贝2个 “foo” 之间的字符串。</p><p>还有很多时间并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：</p><ul><li><p>d (删除 )</p></li><li><p>v (可视化的选择)</p></li><li><p>gU (变大写)</p></li><li><p>gu (变小写)</p></li><li><p>等等</p></li></ul><p>（陈皓注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）</p><h3 id="第四级-–-Vim-超能力"><a href="#第四级-–-Vim-超能力" class="headerlink" title="第四级 – Vim 超能力"></a>第四级 – Vim 超能力</h3><p>你只需要掌握前面的命令，你就可以很舒服的使用VIM了。但是，现在，我们向你介绍的是VIM杀手级的功能。下面这些功能是我只用vim的原因。</p><h4 id="在当前行上移动光标-0-f-F-t-T"><a href="#在当前行上移动光标-0-f-F-t-T" class="headerlink" title="在当前行上移动光标: 0 ^ $ f F t T , ;"></a>在当前行上移动光标: <code>0 ^ $ f F t T ,</code> ;</h4><div class="note success">            <ul><li>0 → 到行头</li><li>^ → 到本行的第一个非blank字符</li><li>$ → 到行尾</li><li>g_ → 到本行最后一个不是blank字符的位置。</li><li>fa → 到下一个为a的字符处，你也可以fs到下一个为s的字符。</li><li>t, → 到逗号前的第一个字符。逗号可以变成其它字符。</li><li>3fa → 在当前行查找第三个出现的a。</li><li>F 和 T → 和 f 和 t 一样，只不过是相反方向。<br><img data-src="/images/vim-line-moves.png" alt="line moves"></li></ul>          </div><p>还有一个很有用的命令是 <code>dt</code>“ → 删除所有的内容，直到遇到双引号—— “。</p><h4 id="区域选择-lt-action-gt-a-lt-object-gt-或-lt-action-gt-i-lt-object-gt"><a href="#区域选择-lt-action-gt-a-lt-object-gt-或-lt-action-gt-i-lt-object-gt" class="headerlink" title="区域选择 &lt;action&gt;a&lt;object&gt; 或 &lt;action&gt;i&lt;object&gt;"></a>区域选择 <code>&lt;action&gt;a&lt;object&gt;</code> 或 <code>&lt;action&gt;i&lt;object&gt;</code></h4><p>在visual 模式下，这些命令很强大，其命令格式为</p><p><code>&lt;action&gt;a&lt;object&gt;</code> 和 <code>&lt;action&gt;i&lt;object&gt;</code></p><ul><li><p>action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。</p></li><li><p>object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符：”、 ‘、 )、 }、 ]。</p></li></ul><p>假设你有一个字符串 <code>(map (+) (&quot;foo&quot;))</code>.而光标键在第一个 <code>o</code> 的位置。</p><div class="note success">            <ul><li>vi” → 会选择 foo.</li><li>va” → 会选择 “foo”.</li><li>vi) → 会选择 “foo”.</li><li>va) → 会选择(“foo”).</li><li>v2i) → 会选择 map (+) (“foo”)</li><li>v2a) → 会选择 (map (+) (“foo”))</li></ul>          </div><p><img data-src="/images/vim-text-objects-selection.png" alt="Text objects selection"></p><h4 id="块操作-lt-C-v-gt"><a href="#块操作-lt-C-v-gt" class="headerlink" title="块操作: &lt;C+v&gt;"></a>块操作: <code>&lt;C+v&gt;</code></h4><p>块操作，典型的操作： <code>0 &lt;C+v&gt; &lt;C+d&gt; I-- [ESC]</code></p><div class="note success">            <ul><li>^ → 到行头</li><li>&lt;C+v&gt; → 开始块操作</li><li>&lt;C+d&gt; → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)</li><li>I– [ESC] → I是插入，插入“–”，按ESC键来为每一行生效。</li></ul>          </div><p><img data-src="/images/vim-rectangular-blocks.gif" alt="Rectangular blocks"></p><p>在Windows下的vim，你需要使用 <code>&lt;C+q&gt;</code> 而不是<code>&lt;C+v&gt;</code>，<code>&lt;C+v&gt;</code> 是拷贝剪贴板。</p><p>自动提示： <code>&lt;C+n&gt;</code> 和 <code>&lt;C+p&gt;</code></p><p>在 Insert 模式下，你可以输入一个词的开头，然后按 <code>&lt;C+p&gt;或是&lt;C+n&gt;，自动补齐功能就出现了……</code></p><p><img data-src="/images/vim-completion.gif" alt="Completion"></p><h4 id="宏录制：-qa-操作序列-q-a"><a href="#宏录制：-qa-操作序列-q-a" class="headerlink" title="宏录制： qa 操作序列 q, @a , @@"></a>宏录制： qa 操作序列 q, @a , @@</h4><ul><li><p>qa 把你的操作记录在寄存器 a。</p></li><li><p>于是 @a  会replay被录制的宏。</p></li><li><p>@@ 是一个快捷键用来replay最新录制的宏。</p></li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>在一个只有一行且这一行只有“1”的文本中，键入如下命令：</p><div class="note success">            <ul><li>qaYp&lt;C+a&gt;q→<ul><li>qa 开始录制</li><li>Yp 复制行.</li><li>&lt;C+a&gt; 增加1.</li><li>q 停止录制.</li></ul></li><li>@a  → 在1下面写下 2</li><li>@@ → 在2 正面写下3</li><li>现在做 100@@ 会创建新的100行，并把数据增加到 103.</li></ul>          </div><p><img data-src="/images/vim-macros.gif" alt="Macros"></p><h4 id="可视化选择：-v-V-lt-C-v-gt"><a href="#可视化选择：-v-V-lt-C-v-gt" class="headerlink" title="可视化选择： v,V,&lt;C+v&gt;"></a>可视化选择： v,V,&lt;C+v&gt;</h4><p>前面，我们看到了 &lt;C+v&gt;的示例 （在Windows下应该是&lt;C+q&gt;），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：</p><ul><li><p>J → 把所有的行连接起来（变成一行）</p></li><li><p>&lt; 或 &gt; → 左右缩进</p></li><li><p>= → 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）</p></li></ul><p><img data-src="/images/vim-autoindent.gif" alt="Autoindent"></p><p>在所有被选择的行后加上点东西：</p><ul><li><p>&lt;C+v&gt;</p></li><li><p>选中相关的行 (可使用 j 或 &lt;C+d&gt; 或是 /pattern 或是 % 等……)</p></li><li><p>$ 到行最后</p></li><li><p>A, 输入字符串，按 ESC。</p></li></ul><p><img data-src="/images/vim-append-to-many-lines.gif" alt="Append to many lines"></p><h4 id="分屏-split-和-vsplit"><a href="#分屏-split-和-vsplit" class="headerlink" title="分屏: :split 和 vsplit."></a>分屏: :split 和 vsplit.</h4><p>下面是主要的命令，你可以使用VIM的帮助 <code>:help split</code>. 你可以参考本站以前的一篇文章<a href="http://coolshell.cn/articles/1679.html" target="_blank" rel="noopener">VIM分屏</a>。</p><div class="note success">            <ul><li><p>:split → 创建分屏 (:vsplit创建垂直分屏)</p></li><li><p>&lt;C+w&gt;<dir> : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。</p></li><li><p>&lt;C+w&gt;_ (或 &lt;C+w&gt;|) : 最大化尺寸 (&lt;C+w&gt;| 垂直分屏)</p></li><li><p>&lt;C+w&gt;+ (或 &lt;C+w&gt;-) : 增加尺寸</p></li></ul>          </div><p><img data-src="/images/vim-split.gif" alt="Split"></p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><ul><li><p>上面是作者最常用的90%的命令。</p></li><li><p>我建议你每天都学1到2个新的命令。</p></li><li><p>在两到三周后，你会感到vim的强大的。</p></li><li><p>有时候，学习VIM就像是在死背一些东西。</p></li><li><p>幸运的是，vim有很多很不错的工具和优秀的文档。</p></li><li><p>运行vimtutor直到你熟悉了那些基本命令。</p></li><li><p>其在线帮助文档中你应该要仔细阅读的是 :help usr_02.txt.</p></li><li><p>你会学习到诸如  !， 目录，寄存器，插件等很多其它的功能。</p></li></ul><p>学习vim就像学弹钢琴一样，一旦学会，受益无穷。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;下面的文章翻译自 &lt;a href=&quot;http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《Learn Vim Progressively》&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/tags/Linux/"/>
    
      <category term="Vim" scheme="http://leezhiy.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>linux 挂载移动硬盘</title>
    <link href="http://leezhiy.github.io/2016/07/22/2016-07-22-linux-%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98/"/>
    <id>http://leezhiy.github.io/2016/07/22/2016-07-22-linux-%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98/</id>
    <published>2016-07-22T08:22:57.000Z</published>
    <updated>2020-04-21T10:05:20.808Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通常我们使用的移动硬盘或U盘一般都是ntfs或fat32的文件系统，有时候我们会遇到把移动硬盘或者U盘上的内容拷贝的Linux服务器上。然而，一些Linux系统并不支持直接挂载ntfs文件系统的设备的，比如：CentOS，有什么好的解决办法吗？</p><a id="more"></a><p>一般情况下，在Linux系统中，我们并不需要手动安装某些驱动，因为，大多数驱动Linux系统的内核都已经默认可以支持了。但是，某些最新的硬件设备的驱动或NTFS文件系统的驱动，对于我们当前的Linux系统版本，可能就无法支持了。</p><p>那么，我们至少有两种方法来使Linux系统支持NTFS文件系统。</p><p>重新编译Linux系统的内核（过于复杂，不推荐）</p><p>手动下载安装NTFS文件系统的驱动</p><p>这里，我们通过手工下载安装NTFS-3G插件的方式，来使Linux系统支持NTFS文件系统。</p><p>NTFS-3G插件的下载地址：<a href="http://www.tuxera.com/community/ntfs-3g-download" target="_blank" rel="noopener">http://www.tuxera.com/community/ntfs-3g-download</a></p><p>这里，我们选择<a href="http://nchc.dl.sourceforge.net/project/fuse/fuse-2.X/2.9.2/fuse-2.9.2.tar.gz" target="_blank" rel="noopener">下载</a>它的源码包，并将其放到Linux系统的源码包目录（ /usr/local/src），便于统一管理。</p><h2 id="安装NTFS-3G插件的源码包"><a href="#安装NTFS-3G插件的源码包" class="headerlink" title="安装NTFS-3G插件的源码包"></a>安装NTFS-3G插件的源码包</h2><h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><p>如果你的Linux中还没有安装gcc，请先安装这个库，安装命令如下：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc</span><br></pre></td></tr></table></figure><h3 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">进入下载的压缩包的所在目录</span><br><span class="line"></span><br><span class="line">tar -zxvf fuse-2.9.2.tar.gz</span><br><span class="line">解压</span><br><span class="line"></span><br><span class="line">cd fuse-2.9.2</span><br><span class="line">进入解压后的目录</span><br><span class="line"></span><br><span class="line">./configure </span><br><span class="line">编译前准备</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">编译</span><br><span class="line"></span><br><span class="line">make install</span><br><span class="line">安装</span><br></pre></td></tr></table></figure><p>NTFS-3G插件安装完成之后，该Linux系统就可以支持NTFS文件系统了。只不过，Linux系统将NTFS文件系统类型识别为ntfs-3g。</p><p>之后，我们就可以挂载NTFS文件系统的移动硬盘了。</p><p>这里，重点说明一下挂载NTFS文件系统的移动硬盘的格式：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ntfs-3g 移动硬盘的分区设备文件名 挂载点</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通常我们使用的移动硬盘或U盘一般都是ntfs或fat32的文件系统，有时候我们会遇到把移动硬盘或者U盘上的内容拷贝的Linux服务器上。然而，一些Linux系统并不支持直接挂载ntfs文件系统的设备的，比如：CentOS，有什么好的解决办法吗？&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>linux 源码包管理和安装</title>
    <link href="http://leezhiy.github.io/2016/01/18/2016-01-18-linux-%E6%BA%90%E7%A0%81%E5%8C%85%E7%AE%A1%E7%90%86%E5%92%8C%E5%AE%89%E8%A3%85/"/>
    <id>http://leezhiy.github.io/2016/01/18/2016-01-18-linux-%E6%BA%90%E7%A0%81%E5%8C%85%E7%AE%A1%E7%90%86%E5%92%8C%E5%AE%89%E8%A3%85/</id>
    <published>2016-01-17T16:29:12.000Z</published>
    <updated>2020-04-21T14:40:17.623Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="软件包管理简介"><a href="#软件包管理简介" class="headerlink" title="软件包管理简介"></a>软件包管理简介</h2><h3 id="软件包分类"><a href="#软件包分类" class="headerlink" title="软件包分类"></a>软件包分类</h3><p>软件包分为两大类：源码包和二进制包(RPM包、系统默认包)。</p><ul><li><p>源码包</p><p>指的是直接把软件的源代码开放给用户的安装包。Linux最大的特点就是开源，它是用C语言编写的，所以绝大部分源码包也是用C语言编写的。源码包安装过程比较慢和复杂，而且容易报错。源码包可以到该软件的官方网站下载。它的文件名一般是以 .c 结尾，可以用写字板打开查看源代码。计算机能够识别的语言是二进制代码，也就是0或1组成的代码。要想让计算机识别源码包，就必须先将其编译为二进制代码。编译过程，需要C语言编译器gcc的支持。</p><p>脚本安装包也是源码包的一种，它绝大多数是对源码包进行再开发之后的源码包。这种包比较少见，有点类似于Windows中的软件包，它的安装程序一般是install.sh，其安装过程非常简单，有简易的安装界面。</p></li></ul><a id="more"></a><ul><li><p>二进制包</p><p>也叫RPM包，也是系统默认包，它是经过编译之后的安装包。不能看到它的源代码。二进制包实际上是软件的厂商在发行软件时，将源码包进行了编译和一些特定的设置。从而，简化了安装步骤，加快了安装速度。RPM包的文件名一般以 .rpm 结尾。</p><p>注意：redhat系列的Linux系统(比如：CentOS)用的二进制包才是RPM包，Ubuntu和Debian系列的Linux系统用的二进制包是DEB包。</p><p>redhat系列与Ubuntu和Debian系列的Linux系统的主要区别就在于二进制包的不同。</p></li></ul><h3 id="源码包的优缺点"><a href="#源码包的优缺点" class="headerlink" title="源码包的优缺点"></a>源码包的优缺点</h3><p>源码包的优点：</p><ul><li>开源，如果有足够的能力，可以修改源代码。</li><li>可以自由选择所需要的功能。</li><li>软件是编译安装，软件更加适合系统，更加稳定，运行效率更高。</li><li>卸载方便（可以直接删除软件的安装目录，不会有任何垃圾文件）。</li></ul><p>源码包的缺点：</p><ul><li>安装步骤多，过程复杂，容易出错。</li><li>编译时间较长。</li><li>因为是编译安装，安装过程中一旦报错，新手很难解决。</li></ul><h2 id="源码包管理"><a href="#源码包管理" class="headerlink" title="源码包管理"></a>源码包管理</h2><h3 id="源码包和rpm包的区别"><a href="#源码包和rpm包的区别" class="headerlink" title="源码包和rpm包的区别"></a>源码包和rpm包的区别</h3><p>rpm包安装时，不需要指定安装位置，它会安装在系统的默认位置中。</p><p>大多数rpm包的默认安装位置如下：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/           配置文件</span><br><span class="line">/usr/bin/       可执行的命令</span><br><span class="line">/usr/lib/       程序所使用的函数库</span><br><span class="line">/usr/share/doc/     基本的软件使用手册</span><br><span class="line">/usr/share/man/     帮助手册</span><br></pre></td></tr></table></figure><p>源码包安装时，可以指定安装位置，如果没有指定，一般来说，默认的安装位置是 <code>/usr/local/软件名/</code> 目录下。</p><p>由于安装位置的不同，导致了服务的管理方法的不同。</p><p>rpm包安装的服务，可以使用系统服务管理命令(service)来管理。</p><p>例如，rpm包安装的apache的启动方法有两种：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.d/init.d/httpd start</span><br><span class="line">或者</span><br><span class="line">service httpd start</span><br><span class="line">注意: service 命令是红帽子系列的linux系统专有的,其他linux系统可能没有该命令</span><br></pre></td></tr></table></figure><p>service 命令会到服务的默认保存位置 /etc/rc.d/init.d/ 中搜索相关的服务是否存在。</p><p>源码包安装的服务，则不能用服务管理命令(service)来管理，只能用绝对路径进行服务的管理。</p><p>例如，源码包安装的apache的启动方法：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/apache2/bin/apachectl start</span><br></pre></td></tr></table></figure><h3 id="源码包的安装方法"><a href="#源码包的安装方法" class="headerlink" title="源码包的安装方法"></a>源码包的安装方法</h3><p>这里以安装apache的源码包为例。</p><ol><li><p>安装准备</p><p>安装C语言编译器 gcc ( <code>yum -y install gcc</code> )</p><p>下载apache的源码包 <a href="http://mirror.bit.edu.cn/apache/httpd/" target="_blank" rel="noopener">http://mirror.bit.edu.cn/apache/httpd/</a></p></li><li><p>安装注意事项</p><p>源码包的保存位置 /usr/local/src</p><p>(将下载好的源码包压缩文件，拷贝至这个目录，便于对所有的源码包进行管理)</p><p>软件的安装位置 /usr/local</p></li><li><p>安装过程</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf httpd-2.2.9.tar.gz</span><br><span class="line">解压源码包</span><br><span class="line"></span><br><span class="line">cd httpd-2.2.9</span><br><span class="line">进入解压后的目录</span><br><span class="line"></span><br><span class="line">ls                  </span><br><span class="line">查看当前目录中有哪些文件( 一般都会有安装说明文件INSTALL和使用说明文件README )</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/apache2</span><br><span class="line">软件配置与检查</span><br><span class="line">(如果这一步出错,可使用命令 make clean 清空编译产生的临时文件.解决问题后,再来重新安装)</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">编译 </span><br><span class="line">(如果这一步出错,可使用命令 make clean 清空编译产生的临时文件.解决问题后,再来重新安装)</span><br><span class="line"></span><br><span class="line">make install                </span><br><span class="line">执行安装 </span><br><span class="line">( 这时,才会把软件安装到指定的安装位置.到此,安装步骤结束)</span><br><span class="line"></span><br><span class="line">/usr/local/apache2/bin/apachectl start      </span><br><span class="line">启动apache</span><br></pre></td></tr></table></figure></li><li><p>源码包的卸载</p><p><code>rm -rf /usr/local/apache2/</code></p><p>源码包没有指定的卸载命令，可以直接删除安装目录达到卸载目的，不会遗留任何垃圾文件。</p></li></ol><h3 id="脚本安装包"><a href="#脚本安装包" class="headerlink" title="脚本安装包"></a>脚本安装包</h3><p>脚本安装包并不是独立的软件包类型，而是人为地把源码包的安装过程写成了可以自动安装的脚本，只要执行安装脚本(一般为setup.sh)，定义简单的参数，就可以快速完成安装。(非常类似于Windows中的软件安装方式)。</p><p>解压脚本安装包，进入解压后的目录，执行 setup.sh 脚本文件，一直回车(使用默认的参数)即可顺利完成安装。</p><p>脚本安装包非常少见，了解即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件包管理简介&quot;&gt;&lt;a href=&quot;#软件包管理简介&quot; class=&quot;headerlink&quot; title=&quot;软件包管理简介&quot;&gt;&lt;/a&gt;软件包管理简介&lt;/h2&gt;&lt;h3 id=&quot;软件包分类&quot;&gt;&lt;a href=&quot;#软件包分类&quot; class=&quot;headerlink&quot; title=&quot;软件包分类&quot;&gt;&lt;/a&gt;软件包分类&lt;/h3&gt;&lt;p&gt;软件包分为两大类：源码包和二进制包(RPM包、系统默认包)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源码包&lt;/p&gt;
&lt;p&gt;指的是直接把软件的源代码开放给用户的安装包。Linux最大的特点就是开源，它是用C语言编写的，所以绝大部分源码包也是用C语言编写的。源码包安装过程比较慢和复杂，而且容易报错。源码包可以到该软件的官方网站下载。它的文件名一般是以 .c 结尾，可以用写字板打开查看源代码。计算机能够识别的语言是二进制代码，也就是0或1组成的代码。要想让计算机识别源码包，就必须先将其编译为二进制代码。编译过程，需要C语言编译器gcc的支持。&lt;/p&gt;
&lt;p&gt;脚本安装包也是源码包的一种，它绝大多数是对源码包进行再开发之后的源码包。这种包比较少见，有点类似于Windows中的软件包，它的安装程序一般是install.sh，其安装过程非常简单，有简易的安装界面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://leezhiy.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
